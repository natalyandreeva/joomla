O:21:"Akeeba\Engine\Factory":1:{s:13:" * objectList";a:42:{s:28:"\Akeeba\Engine\Configuration";O:27:"Akeeba\Engine\Configuration":5:{s:45:" Akeeba\Engine\Configuration defaultNameSpace";s:6:"global";s:54:" Akeeba\Engine\Configuration directory_containing_keys";a:1:{i:0;s:29:"akeeba.basic.output_directory";}s:44:" Akeeba\Engine\Configuration protected_nodes";a:11:{i:16;s:37:"akeeba.tuning.nobreak.beforelargefile";i:17;s:36:"akeeba.tuning.nobreak.afterlargefile";i:18;s:31:"akeeba.tuning.nobreak.proactive";i:19;s:29:"akeeba.tuning.nobreak.domains";i:20;s:34:"akeeba.tuning.nobreak.finalization";i:21;s:26:"akeeba.tuning.settimelimit";i:27;s:19:"akeeba.quota.remote";i:28;s:26:"akeeba.quota.maxage.enable";i:29;s:27:"akeeba.advanced.dump_engine";i:30;s:27:"akeeba.advanced.scan_engine";i:31;s:31:"akeeba.advanced.postproc_engine";}s:37:" Akeeba\Engine\Configuration registry";a:5:{s:6:"global";a:1:{s:4:"data";O:8:"stdClass":0:{}}s:6:"akeeba";a:1:{s:4:"data";O:8:"stdClass":7:{s:6:"tuning";O:8:"stdClass":5:{s:13:"min_exec_time";s:4:"2000";s:13:"max_exec_time";s:2:"14";s:13:"run_time_bias";s:2:"75";s:7:"nobreak";O:8:"stdClass":5:{s:15:"beforelargefile";s:1:"0";s:14:"afterlargefile";s:1:"0";s:9:"proactive";s:1:"0";s:7:"domains";s:1:"0";s:12:"finalization";s:1:"0";}s:12:"settimelimit";s:1:"1";}s:8:"advanced";O:8:"stdClass":9:{s:10:"autoresume";s:1:"1";s:18:"autoresume_timeout";s:2:"10";s:21:"autoresume_maxretries";s:1:"3";s:11:"dump_engine";s:6:"native";s:11:"scan_engine";s:5:"smart";s:15:"archiver_engine";s:3:"jpa";s:15:"postproc_engine";s:4:"none";s:18:"embedded_installer";s:5:"angie";s:14:"integritycheck";s:1:"0";}s:5:"basic";O:8:"stdClass":6:{s:16:"output_directory";s:58:"/var/www/kiseya/administrator/components/com_akeeba/backup";s:9:"log_level";s:1:"4";s:12:"archive_name";s:25:"site-[HOST]-[DATE]-[TIME]";s:11:"backup_type";s:4:"full";s:14:"clientsidewait";s:1:"0";s:9:"useiframe";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:12:"usedbstorage";s:1:"0";}s:5:"quota";O:8:"stdClass":7:{s:6:"remote";s:1:"0";s:6:"maxage";O:8:"stdClass":1:{s:6:"enable";s:1:"0";}s:14:"obsolete_quota";s:2:"50";s:17:"enable_size_quota";s:1:"0";s:10:"size_quota";s:8:"15728640";s:18:"enable_count_quota";s:1:"1";s:11:"count_quota";s:1:"3";}s:5:"Array";a:1:{i:0;O:8:"stdClass":1:{s:5:"Array";O:8:"stdClass":1:{s:1:"1";s:58:"/var/www/kiseya/administrator/components/com_akeeba/backup";}}}s:4:"flag";O:8:"stdClass":1:{s:7:"confwiz";s:1:"1";}}}s:6:"engine";a:1:{s:4:"data";O:8:"stdClass":5:{s:9:"installer";O:8:"stdClass":1:{s:5:"angie";O:8:"stdClass":1:{s:3:"key";s:0:"";}}s:8:"archiver";O:8:"stdClass":2:{s:6:"common";O:8:"stdClass":4:{s:20:"dereference_symlinks";s:1:"0";s:9:"part_size";s:1:"0";s:10:"chunk_size";s:7:"1048576";s:18:"big_file_threshold";s:7:"1048576";}s:3:"zip";O:8:"stdClass":1:{s:18:"cd_glue_chunk_size";s:7:"1048576";}}s:4:"dump";O:8:"stdClass":3:{s:7:"divider";O:8:"stdClass":2:{s:6:"common";s:1:"0";s:5:"mysql";s:1:"0";}s:6:"common";O:8:"stdClass":5:{s:12:"blankoutpass";s:1:"0";s:16:"extended_inserts";s:1:"1";s:11:"packet_size";s:6:"131072";s:9:"splitsize";s:6:"524288";s:9:"batchsize";s:4:"1000";}s:6:"native";O:8:"stdClass":3:{s:18:"advanced_entitites";s:1:"0";s:14:"nodependencies";s:1:"0";s:7:"nobtree";s:1:"1";}}s:4:"scan";O:8:"stdClass":2:{s:5:"smart";O:8:"stdClass":1:{s:19:"large_dir_threshold";s:3:"100";}s:6:"common";O:8:"stdClass":1:{s:9:"largefile";s:8:"10485760";}}s:5:"Array";a:1:{i:0;N;}}}s:4:"core";a:1:{s:4:"data";O:8:"stdClass":2:{s:7:"filters";O:8:"stdClass":4:{s:9:"errorlogs";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}s:15:"dateconditional";O:8:"stdClass":2:{s:7:"enabled";s:1:"0";s:5:"start";s:22:"1981-02-20 12:15 GMT+2";}s:9:"hoststats";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}s:6:"finder";O:8:"stdClass":1:{s:7:"enabled";s:1:"1";}}s:5:"Array";a:1:{i:0;a:1:{i:0;a:1:{i:0;N;}}}}}s:8:"volatile";a:1:{s:4:"data";O:8:"stdClass":11:{s:4:"core";O:8:"stdClass":3:{s:12:"finalization";O:8:"stdClass":2:{s:15:"action_handlers";a:1:{i:0;O:38:"Akeeba\Engine\Finalization\TestExtract":4:{s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}s:19:"action_queue_before";a:1:{i:0;s:12:"test_extract";}}s:11:"description";N;s:7:"comment";N;}s:17:"operation_counter";i:1;s:12:"step_counter";i:60;s:9:"breakflag";b:0;s:12:"akeebaengine";O:8:"stdClass":2:{s:7:"domains";s:36:"init|installer|packdb|packing|finale";s:7:"scripts";s:42:"full|dbonly|fileonly|alldb|incfile|incfull";}s:6:"domain";O:8:"stdClass":5:{s:4:"init";O:8:"stdClass":3:{s:6:"domain";s:4:"init";s:5:"class";s:4:"Init";s:4:"text";s:35:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_INIT";}s:9:"installer";O:8:"stdClass":3:{s:6:"domain";s:9:"installer";s:5:"class";s:9:"Installer";s:4:"text";s:40:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_INSTALLER";}s:6:"packdb";O:8:"stdClass":3:{s:6:"domain";s:6:"PackDB";s:5:"class";s:2:"Db";s:4:"text";s:37:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_PACKDB";}s:7:"packing";O:8:"stdClass":3:{s:6:"domain";s:7:"Packing";s:5:"class";s:4:"Pack";s:4:"text";s:38:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_PACKING";}s:6:"finale";O:8:"stdClass":3:{s:6:"domain";s:6:"finale";s:5:"class";s:12:"Finalization";s:4:"text";s:39:"COM_AKEEBA_BACKUP_LABEL_DOMAIN_FINISHED";}}s:9:"scripting";O:8:"stdClass":6:{s:4:"full";O:8:"stdClass":4:{s:5:"chain";s:36:"init|installer|packdb|packing|finale";s:4:"text";s:33:"COM_AKEEBA_CONFIG_BACKUPTYPE_FULL";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:6:"dbonly";O:8:"stdClass":4:{s:5:"chain";s:18:"init|packdb|finale";s:4:"text";s:35:"COM_AKEEBA_CONFIG_BACKUPTYPE_DBONLY";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"output";s:12:"databasesini";s:1:"0";s:11:"skipextradb";s:1:"1";s:13:"abstractnames";s:1:"0";s:14:"dropstatements";s:1:"1";}s:4:"core";O:8:"stdClass":2:{s:14:"forceextension";s:4:".sql";s:13:"createarchive";s:1:"0";}}s:8:"fileonly";O:8:"stdClass":3:{s:5:"chain";s:19:"init|packing|finale";s:4:"text";s:37:"COM_AKEEBA_CONFIG_BACKUPTYPE_FILEONLY";s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:5:"alldb";O:8:"stdClass":4:{s:5:"chain";s:28:"init|installer|packdb|finale";s:4:"text";s:34:"COM_AKEEBA_CONFIG_BACKUPTYPE_ALLDB";s:2:"db";O:8:"stdClass":7:{s:8:"tempfile";s:9:"temporary";s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";s:15:"finalizearchive";s:1:"1";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}}s:7:"incfile";O:8:"stdClass":3:{s:5:"chain";s:19:"init|packing|finale";s:4:"text";s:36:"COM_AKEEBA_CONFIG_BACKUPTYPE_INCFILE";s:6:"filter";O:8:"stdClass":1:{s:11:"incremental";s:1:"1";}}s:7:"incfull";O:8:"stdClass":5:{s:5:"chain";s:36:"init|installer|packdb|packing|finale";s:4:"text";s:36:"COM_AKEEBA_CONFIG_BACKUPTYPE_INCFULL";s:2:"db";O:8:"stdClass":5:{s:10:"saveasname";s:6:"normal";s:12:"databasesini";s:1:"1";s:11:"skipextradb";s:1:"0";s:13:"abstractnames";s:1:"1";s:14:"dropstatements";s:1:"0";}s:4:"core";O:8:"stdClass":1:{s:13:"createarchive";s:1:"1";}s:6:"filter";O:8:"stdClass":1:{s:11:"incremental";s:1:"1";}}}s:6:"engine";O:8:"stdClass":1:{s:8:"archiver";O:8:"stdClass":4:{s:16:"sourceNameOrData";N;s:7:"unc_len";N;s:6:"resume";N;s:14:"processingfile";b:0;}}s:8:"database";O:8:"stdClass":2:{s:4:"root";s:8:"[SITEDB]";s:20:"last_large_col_table";s:0:"";}s:9:"tempfiles";s:6:"a:0:{}";s:10:"filesystem";O:8:"stdClass":1:{s:12:"current_root";s:15:"/var/www/kiseya";}}}}s:13:"activeProfile";i:1;}s:27:"\Akeeba\Engine\Core\Filters";O:26:"Akeeba\Engine\Core\Filters":7:{s:43:" Akeeba\Engine\Core\Filters filter_registry";a:2:{s:8:"skipdirs";a:0:{}s:11:"directories";a:1:{s:10:"[SITEROOT]";a:1:{i:0;s:25:"images/stories/virtuemart";}}}s:35:" Akeeba\Engine\Core\Filters filters";a:14:{s:11:"Directories";O:32:"Akeeba\Engine\Filter\Directories":11:{s:11:"filter_name";s:11:"directories";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:1:{i:0;s:25:"images/stories/virtuemart";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:11:"Incremental";O:32:"Akeeba\Engine\Filter\Incremental":11:{s:11:"filter_name";s:0:"";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:16:"Excludetabledata";O:37:"Akeeba\Engine\Filter\Excludetabledata":11:{s:11:"filter_name";s:16:"Excludetabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:8:"[SITEDB]";a:2:{i:0;s:10:"#__session";i:1;s:15:"#__guardxt_runs";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:12:"Excludefiles";O:33:"Akeeba\Engine\Filter\Excludefiles":11:{s:11:"filter_name";s:12:"Excludefiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:3:{i:0;s:13:"kickstart.php";i:1;s:9:"error_log";i:2;s:23:"administrator/error_log";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:16:"Systemcachefiles";O:37:"Akeeba\Engine\Filter\Systemcachefiles":11:{s:11:"filter_name";s:16:"Systemcachefiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:4:{i:0;s:13:"#/Thumbs.db$#";i:1;s:13:"#^Thumbs.db$#";i:2;s:14:"#/.DS_Store$#i";i:3;s:14:"#^.DS_Store$#i";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:10:"Cvsfolders";O:31:"Akeeba\Engine\Filter\Cvsfolders":11:{s:11:"filter_name";s:10:"Cvsfolders";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:4:{i:0;s:9:"#/\.git$#";i:1;s:9:"#^\.git$#";i:2;s:9:"#/\.svn$#";i:3;s:9:"#^\.svn$#";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:8:"Siteroot";O:29:"Akeeba\Engine\Filter\Siteroot":11:{s:11:"filter_name";s:8:"Siteroot";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{i:0;a:2:{i:0;s:10:"[SITEROOT]";i:1;N;}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:14:"Excludefolders";O:35:"Akeeba\Engine\Filter\Excludefolders":11:{s:11:"filter_name";s:14:"Excludefolders";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:2:{i:0;s:7:"awstats";i:1;s:7:"cgi-bin";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:14:"Joomlaskipdirs";O:35:"Akeeba\Engine\Filter\Joomlaskipdirs":11:{s:11:"filter_name";s:14:"Joomlaskipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:28:{i:0;s:42:"administrator/components/com_akeeba/backup";i:1;s:3:"tmp";i:2;s:3:"log";i:3;s:3:"tmp";i:4;s:3:"tmp";i:5;s:3:"tmp";i:6;s:19:"administrator/cache";i:7;s:19:"administrator/cache";i:8;s:5:"cache";i:9;s:5:"cache";i:10;s:19:"administrator/cache";i:11;s:5:"cache";i:12;s:19:"administrator/cache";i:13;s:12:"installation";i:14;s:12:"installation";i:15;s:12:"installation";i:16;s:42:"administrator/components/com_akeeba/backup";i:17;s:42:"administrator/components/com_akeeba/backup";i:18;s:42:"administrator/components/com_akeeba/backup";i:19;s:33:"components/libraries/cmslib/cache";i:20;s:33:"components/libraries/cmslib/cache";i:21;s:33:"components/libraries/cmslib/cache";i:22;s:4:"logs";i:23;s:4:"logs";i:24;s:4:"logs";i:25;s:3:"log";i:26;s:3:"log";i:27;s:3:"log";}}s:10:" * fsTools";O:29:"Akeeba\Engine\Util\FileSystem":1:{s:40:" Akeeba\Engine\Util\FileSystem isWindows";b:0;}s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:6:"Sitedb";O:27:"Akeeba\Engine\Filter\Sitedb":11:{s:11:"filter_name";s:6:"Sitedb";s:6:"object";s:2:"db";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:8:"[SITEDB]";a:8:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";s:4:"pass";s:8:"database";s:4:"kiss";s:6:"prefix";s:6:"kisya_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";}}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:15:"Joomlaskipfiles";O:36:"Akeeba\Engine\Filter\Joomlaskipfiles":11:{s:11:"filter_name";s:15:"Joomlaskipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:1:{s:10:"[SITEROOT]";a:28:{i:0;s:42:"administrator/components/com_akeeba/backup";i:1;s:3:"tmp";i:2;s:3:"log";i:3;s:3:"tmp";i:4;s:3:"tmp";i:5;s:3:"tmp";i:6;s:19:"administrator/cache";i:7;s:19:"administrator/cache";i:8;s:5:"cache";i:9;s:5:"cache";i:10;s:19:"administrator/cache";i:11;s:5:"cache";i:12;s:19:"administrator/cache";i:13;s:12:"installation";i:14;s:12:"installation";i:15;s:12:"installation";i:16;s:42:"administrator/components/com_akeeba/backup";i:17;s:42:"administrator/components/com_akeeba/backup";i:18;s:42:"administrator/components/com_akeeba/backup";i:19;s:33:"components/libraries/cmslib/cache";i:20;s:33:"components/libraries/cmslib/cache";i:21;s:33:"components/libraries/cmslib/cache";i:22;s:4:"logs";i:23;s:4:"logs";i:24;s:4:"logs";i:25;s:3:"log";i:26;s:3:"log";i:27;s:3:"log";}}s:10:" * fsTools";r:397;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:20:"Stack\StackErrorlogs";O:41:"Akeeba\Engine\Filter\Stack\StackErrorlogs":11:{s:11:"filter_name";s:14:"stackerrorlogs";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:20:"Stack\StackHoststats";O:41:"Akeeba\Engine\Filter\Stack\StackHoststats":11:{s:11:"filter_name";s:14:"stackhoststats";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:17:"Stack\StackFinder";O:38:"Akeeba\Engine\Filter\Stack\StackFinder":11:{s:11:"filter_name";s:0:"";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:3:"api";s:7:"enabled";b:1;s:14:" * filter_data";N;s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}s:43:" Akeeba\Engine\Core\Filters cleanup_has_run";b:1;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:27:"\Akeeba\Engine\Filter\Files";O:26:"Akeeba\Engine\Filter\Files":11:{s:11:"filter_name";s:5:"files";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:29:"\Akeeba\Engine\Core\Kettenrad";O:28:"Akeeba\Engine\Core\Kettenrad":26:{s:41:" Akeeba\Engine\Core\Kettenrad array_cache";a:13:{s:6:"HasRun";i:0;s:6:"Domain";s:6:"finale";s:4:"Step";s:0:"";s:7:"Substep";s:0:"";s:5:"Error";s:0:"";s:8:"Warnings";a:0:{}s:7:"Archive";s:31:"site-kiseya-20170221-105730.jpa";s:3:"tag";s:7:"backend";s:8:"Progress";i:75;s:8:"backupid";s:4:"id20";s:9:"sleepTime";i:0;s:10:"stepNumber";i:60;s:9:"stepState";s:7:"running";}s:42:" Akeeba\Engine\Core\Kettenrad domain_chain";a:0:{}s:36:" Akeeba\Engine\Core\Kettenrad domain";s:6:"finale";s:35:" Akeeba\Engine\Core\Kettenrad class";s:12:"Finalization";s:33:" Akeeba\Engine\Core\Kettenrad tag";s:7:"backend";s:41:" Akeeba\Engine\Core\Kettenrad total_steps";i:4;s:39:" Akeeba\Engine\Core\Kettenrad backup_id";s:4:"id20";s:45:" Akeeba\Engine\Core\Kettenrad warnings_issued";b:1;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:1;s:13:" * isFinished";b:0;s:9:" * hasRan";b:0;s:16:" * active_domain";s:6:"finale";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:1;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:28:"\Akeeba\Engine\Filter\Tables";O:27:"Akeeba\Engine\Filter\Tables":11:{s:11:"filter_name";s:6:"tables";s:6:"object";s:8:"dbobject";s:7:"subtype";s:3:"all";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Regextables";O:32:"Akeeba\Engine\Filter\Regextables":11:{s:11:"filter_name";s:11:"regextables";s:6:"object";s:8:"dbobject";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"\Akeeba\Engine\Filter\Extradirs";O:30:"Akeeba\Engine\Filter\Extradirs":11:{s:11:"filter_name";s:9:"extradirs";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Directories";r:240;s:29:"\Akeeba\Engine\Filter\Multidb";O:28:"Akeeba\Engine\Filter\Multidb":11:{s:11:"filter_name";s:7:"multidb";s:6:"object";s:2:"db";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:35:"\Akeeba\Engine\Filter\Regexskipdirs";O:34:"Akeeba\Engine\Filter\Regexskipdirs":11:{s:11:"filter_name";s:13:"regexskipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:30:"\Akeeba\Engine\Filter\Skipdirs";O:29:"Akeeba\Engine\Filter\Skipdirs":11:{s:11:"filter_name";s:8:"skipdirs";s:6:"object";s:3:"dir";s:7:"subtype";s:8:"children";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:33:"\Akeeba\Engine\Filter\Incremental";r:254;s:31:"\Akeeba\Engine\Filter\Tabledata";O:30:"Akeeba\Engine\Filter\Tabledata":11:{s:11:"filter_name";s:9:"tabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:38:"\Akeeba\Engine\Filter\Regexdirectories";O:37:"Akeeba\Engine\Filter\Regexdirectories":11:{s:11:"filter_name";s:16:"regexdirectories";s:6:"object";s:3:"dir";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Filter\Regextabledata";O:35:"Akeeba\Engine\Filter\Regextabledata":11:{s:11:"filter_name";s:14:"regextabledata";s:6:"object";s:8:"dbobject";s:7:"subtype";s:7:"content";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"\Akeeba\Engine\Filter\Skipfiles";O:30:"Akeeba\Engine\Filter\Skipfiles":11:{s:11:"filter_name";s:9:"skipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Filter\Regexskipfiles";O:35:"Akeeba\Engine\Filter\Regexskipfiles":11:{s:11:"filter_name";s:14:"regexskipfiles";s:6:"object";s:3:"dir";s:7:"subtype";s:7:"content";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:32:"\Akeeba\Engine\Filter\Regexfiles";O:31:"Akeeba\Engine\Filter\Regexfiles":11:{s:11:"filter_name";s:10:"regexfiles";s:6:"object";s:4:"file";s:7:"subtype";s:3:"all";s:6:"method";s:5:"regex";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:38:"\Akeeba\Engine\Filter\Excludetabledata";r:266;s:34:"\Akeeba\Engine\Filter\Excludefiles";r:281;s:38:"\Akeeba\Engine\Filter\Systemcachefiles";r:297;s:32:"\Akeeba\Engine\Filter\Cvsfolders";r:314;s:30:"\Akeeba\Engine\Filter\Siteroot";r:331;s:36:"\Akeeba\Engine\Filter\Excludefolders";r:346;s:36:"\Akeeba\Engine\Filter\Joomlaskipdirs";r:361;s:28:"\Akeeba\Engine\Filter\Sitedb";r:403;s:37:"\Akeeba\Engine\Filter\Joomlaskipfiles";r:424;s:31:"\Akeeba\Engine\Filter\Libraries";O:30:"Akeeba\Engine\Filter\Libraries":11:{s:11:"filter_name";s:9:"Libraries";s:6:"object";s:3:"dir";s:7:"subtype";s:9:"inclusion";s:6:"method";s:6:"direct";s:7:"enabled";b:1;s:14:" * filter_data";a:0:{}s:10:" * fsTools";N;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:42:"\Akeeba\Engine\Filter\Stack\StackErrorlogs";r:465;s:42:"\Akeeba\Engine\Filter\Stack\StackHoststats";r:477;s:39:"\Akeeba\Engine\Filter\Stack\StackFinder";r:489;s:25:"\Akeeba\Engine\Core\Timer";O:24:"Akeeba\Engine\Core\Timer":6:{s:39:" Akeeba\Engine\Core\Timer max_exec_time";d:10.5;s:36:" Akeeba\Engine\Core\Timer start_time";d:1487675010.205676;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:31:"Akeeba\Engine\Util\PushMessages";O:31:"Akeeba\Engine\Util\PushMessages":2:{s:42:" Akeeba\Engine\Util\PushMessages connector";N;s:40:" Akeeba\Engine\Util\PushMessages enabled";b:0;}s:31:"\Akeeba\Engine\Core\Domain\Init";O:30:"Akeeba\Engine\Core\Domain\Init":20:{s:43:" Akeeba\Engine\Core\Domain\Init description";s:32:"Backup taken on 21.02.2017 10:56";s:39:" Akeeba\Engine\Core\Domain\Init comment";s:0:"";s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:27:"\Akeeba\Engine\Archiver\Jpa";O:26:"Akeeba\Engine\Archiver\Jpa":25:{s:38:" Akeeba\Engine\Archiver\Jpa _fileCount";i:24307;s:43:" Akeeba\Engine\Archiver\Jpa _compressedSize";i:246365612;s:45:" Akeeba\Engine\Archiver\Jpa _uncompressedSize";i:504271724;s:41:" Akeeba\Engine\Archiver\Jpa _dataFileName";s:90:"/var/www/kiseya/administrator/components/com_akeeba/backup/site-kiseya-20170221-105730.jpa";s:46:" Akeeba\Engine\Archiver\Jpa _archive_signature";s:3:"JPA";s:39:" Akeeba\Engine\Archiver\Jpa _fileHeader";s:3:"JPF";s:45:" Akeeba\Engine\Archiver\Jpa _extraHeaderSplit";s:4:"JP";s:40:" Akeeba\Engine\Archiver\Jpa _useSplitZIP";b:0;s:41:" Akeeba\Engine\Archiver\Jpa _fragmentSize";i:0;s:44:" Akeeba\Engine\Archiver\Jpa _currentFragment";i:1;s:43:" Akeeba\Engine\Archiver\Jpa _totalFragments";i:1;s:45:" Akeeba\Engine\Archiver\Jpa _dataFileNameBase";s:0:"";s:49:" Akeeba\Engine\Archiver\Jpa _symlink_store_target";b:1;s:38:" Akeeba\Engine\Archiver\Base _xform_fp";i:0;s:11:" * _comment";s:0:"";s:12:"finishedPart";a:0:{}s:41:" Akeeba\Engine\Archiver\Base filePointers";a:0:{}s:40:" Akeeba\Engine\Archiver\Base fileOffsets";a:1:{s:90:"/var/www/kiseya/administrator/components/com_akeeba/backup/site-kiseya-20170221-105730.jpa";i:19;}s:5:" * fp";N;s:7:" * cdfp";N;s:10:" * fsUtils";O:29:"Akeeba\Engine\Util\FileSystem":1:{s:40:" Akeeba\Engine\Util\FileSystem isWindows";b:0;}s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:30:"\Akeeba\Engine\Util\Statistics";O:29:"Akeeba\Engine\Util\Statistics":7:{s:45:" Akeeba\Engine\Util\Statistics multipart_lock";b:0;s:44:" Akeeba\Engine\Util\Statistics statistics_id";i:20;s:42:" Akeeba\Engine\Util\Statistics cached_data";a:13:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:11:"backupstart";s:19:"2017-02-21 10:57:30";s:6:"status";s:3:"run";s:6:"origin";s:7:"backend";s:4:"type";s:4:"full";s:10:"profile_id";i:1;s:11:"archivename";s:31:"site-kiseya-20170221-105730.jpa";s:13:"absolute_path";s:90:"/var/www/kiseya/administrator/components/com_akeeba/backup/site-kiseya-20170221-105730.jpa";s:9:"multipart";i:0;s:10:"filesexist";i:1;s:3:"tag";s:7:"backend";s:8:"backupid";s:4:"id20";}s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:36:"\Akeeba\Engine\Core\Domain\Installer";O:35:"Akeeba\Engine\Core\Domain\Installer":22:{s:43:" Akeeba\Engine\Core\Domain\Installer offset";i:16841;s:48:" Akeeba\Engine\Core\Domain\Installer runningSize";i:772595;s:47:" Akeeba\Engine\Core\Domain\Installer xformIndex";i:1;s:45:" Akeeba\Engine\Core\Domain\Installer progress";i:1;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:29:"\Akeeba\Engine\Core\Domain\Db";O:28:"Akeeba\Engine\Core\Domain\Db":24:{s:43:" Akeeba\Engine\Core\Domain\Db database_list";a:0:{}s:45:" Akeeba\Engine\Core\Domain\Db database_config";a:11:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";s:4:"pass";s:8:"database";s:4:"kiss";s:6:"prefix";s:6:"kisya_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;s:5:"parts";i:456;}s:41:" Akeeba\Engine\Core\Domain\Db dump_engine";N;s:43:" Akeeba\Engine\Core\Domain\Db databases_ini";s:168:"[site.sql]
dbtype = "mysqli"
dbtech = "mysql"
dbname = "kiss"
sqlfile = "site.sql"
dbhost = "localhost"
dbuser = "root"
dbpass = "pass"
prefix = "kisya_"
parts = "456"
";s:45:" Akeeba\Engine\Core\Domain\Db dumpedDatabases";a:1:{i:0;a:11:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";s:4:"pass";s:8:"database";s:4:"kiss";s:6:"prefix";s:6:"kisya_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;s:5:"parts";i:456;}}s:45:" Akeeba\Engine\Core\Domain\Db total_databases";i:1;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:26:"\Akeeba\Engine\Dump\Native";O:25:"Akeeba\Engine\Dump\Native":20:{s:34:" Akeeba\Engine\Dump\Native _engine";O:31:"Akeeba\Engine\Dump\Native\Mysql":46:{s:22:" * table_autoincrement";a:3:{s:5:"table";s:14:"kisya_weblinks";s:5:"field";s:2:"id";s:5:"value";N;}s:9:" * prefix";s:6:"kisya_";s:7:" * host";s:9:"localhost";s:7:" * port";s:0:"";s:11:" * username";s:4:"root";s:11:" * password";s:4:"pass";s:11:" * database";s:4:"kiss";s:9:" * driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:20:" * postProcessValues";b:0;s:11:" * dumpFile";s:8:"site.sql";s:13:" * data_cache";s:0:"";s:13:" * cache_size";i:131072;s:21:" * processEmptyPrefix";b:1;s:10:"partNumber";i:455;s:27:" Akeeba\Engine\Dump\Base fp";N;s:11:" * tempFile";s:70:"/var/www/kiseya/administrator/components/com_akeeba/backup/f5f7bb7.sql";s:13:" * saveAsName";s:26:"installation/sql/site.s455";s:9:" * tables";a:0:{}s:14:" * tables_data";a:185:{s:23:"kisya_acymailing_action";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:935:"CREATE TABLE `#__acymailing_action` (   `action_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(255) DEFAULT NULL,   `frequency` int(10) unsigned NOT NULL,   `nextdate` int(10) unsigned NOT NULL,   `description` text,   `server` varchar(255) NOT NULL,   `port` varchar(50) NOT NULL,   `connection_method` varchar(10) NOT NULL DEFAULT '0',   `secure_method` varchar(10) NOT NULL DEFAULT '0',   `self_signed` tinyint(4) NOT NULL DEFAULT '0',   `username` varchar(255) NOT NULL,   `password` varchar(50) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `conditions` text,   `actions` text,   `report` text,   `delete_wrong_emails` tinyint(4) NOT NULL DEFAULT '0',   `senderfrom` tinyint(4) NOT NULL DEFAULT '0',   `senderto` tinyint(4) NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   PRIMARY KEY (`action_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"kisya_acymailing_config";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:153:"CREATE TABLE `#__acymailing_config` (   `namekey` varchar(200) NOT NULL,   `value` text,   PRIMARY KEY (`namekey`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"kisya_acymailing_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1341:"CREATE TABLE `#__acymailing_fields` (   `fieldid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `fieldname` varchar(250) NOT NULL,   `namekey` varchar(50) NOT NULL,   `type` varchar(50) DEFAULT NULL,   `value` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL DEFAULT '1',   `ordering` smallint(5) unsigned DEFAULT '99',   `options` text,   `core` tinyint(3) unsigned NOT NULL DEFAULT '0',   `required` tinyint(3) unsigned NOT NULL DEFAULT '0',   `backend` tinyint(3) unsigned NOT NULL DEFAULT '1',   `frontcomp` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontform` tinyint(3) unsigned NOT NULL DEFAULT '1',   `default` varchar(250) DEFAULT NULL,   `listing` tinyint(3) unsigned DEFAULT NULL,   `frontlisting` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontjoomlaregistration` tinyint(3) unsigned NOT NULL DEFAULT '0',   `joomlaprofile` tinyint(3) unsigned NOT NULL DEFAULT '0',   `access` varchar(250) NOT NULL DEFAULT 'all',   `fieldcat` int(11) NOT NULL DEFAULT '0',   `listingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   `frontlistingfilter` tinyint(3) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`fieldid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`published`,`ordering`) ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"kisya_acymailing_filter";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:376:"CREATE TABLE `#__acymailing_filter` (   `filid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `published` tinyint(3) unsigned DEFAULT NULL,   `lasttime` int(10) unsigned DEFAULT NULL,   `trigger` text,   `report` text,   `action` text,   `filter` text,   PRIMARY KEY (`filid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_acymailing_forward";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:302:"CREATE TABLE `#__acymailing_forward` (   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `nbforwarded` int(10) unsigned NOT NULL,   PRIMARY KEY (`subid`,`mailid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:28:"kisya_acymailing_geolocation";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1168:"CREATE TABLE `#__acymailing_geolocation` (   `geolocation_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `geolocation_subid` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_type` varchar(255) NOT NULL DEFAULT 'subscription',   `geolocation_ip` varchar(255) NOT NULL DEFAULT '',   `geolocation_created` int(10) unsigned NOT NULL DEFAULT '0',   `geolocation_latitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_longitude` decimal(9,6) NOT NULL DEFAULT '0.000000',   `geolocation_postal_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_country` varchar(255) NOT NULL DEFAULT '',   `geolocation_country_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_state` varchar(255) NOT NULL DEFAULT '',   `geolocation_state_code` varchar(255) NOT NULL DEFAULT '',   `geolocation_city` varchar(255) NOT NULL DEFAULT '',   `geolocation_continent` varchar(255) NOT NULL DEFAULT '',   `geolocation_timezone` varchar(255) NOT NULL DEFAULT '',   PRIMARY KEY (`geolocation_id`),   KEY `geolocation_type` (`geolocation_subid`,`geolocation_type`),   KEY `geolocation_ip_created` (`geolocation_ip`,`geolocation_created`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_acymailing_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:451:"CREATE TABLE `#__acymailing_history` (   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(50) DEFAULT NULL,   `action` varchar(50) NOT NULL COMMENT 'different actions: created,modified,confirmed',   `data` text,   `source` text,   `mailid` mediumint(8) unsigned DEFAULT NULL,   KEY `subid` (`subid`,`date`),   KEY `dateindex` (`date`),   KEY `actionindex` (`action`,`mailid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"kisya_acymailing_list";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:991:"CREATE TABLE `#__acymailing_list` (   `name` varchar(250) NOT NULL,   `description` text,   `ordering` smallint(5) unsigned DEFAULT '0',   `listid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `published` tinyint(4) DEFAULT NULL,   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `color` varchar(30) DEFAULT NULL,   `visible` tinyint(4) NOT NULL DEFAULT '1',   `welmailid` mediumint(9) DEFAULT NULL,   `unsubmailid` mediumint(9) DEFAULT NULL,   `type` enum('list','campaign') NOT NULL DEFAULT 'list',   `access_sub` varchar(250) NOT NULL DEFAULT 'all',   `access_manage` varchar(250) NOT NULL DEFAULT 'none',   `languages` varchar(250) NOT NULL DEFAULT 'all',   `startrule` varchar(50) NOT NULL DEFAULT '0',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`listid`),   KEY `typeorderingindex` (`type`,`ordering`),   KEY `useridindex` (`userid`),   KEY `typeuseridindex` (`type`,`userid`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"kisya_acymailing_listcampaign";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:208:"CREATE TABLE `#__acymailing_listcampaign` (   `campaignid` smallint(5) unsigned NOT NULL,   `listid` smallint(5) unsigned NOT NULL,   PRIMARY KEY (`campaignid`,`listid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"kisya_acymailing_listmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:197:"CREATE TABLE `#__acymailing_listmail` (   `listid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`listid`,`mailid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_acymailing_listsub";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:386:"CREATE TABLE `#__acymailing_listsub` (   `listid` smallint(5) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `subdate` int(10) unsigned DEFAULT NULL,   `unsubdate` int(10) unsigned DEFAULT NULL,   `status` tinyint(4) NOT NULL,   PRIMARY KEY (`listid`,`subid`),   KEY `subidindex` (`subid`),   KEY `listidstatusindex` (`listid`,`status`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:21:"kisya_acymailing_mail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1425:"CREATE TABLE `#__acymailing_mail` (   `mailid` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,   `subject` varchar(250) NOT NULL,   `body` longtext NOT NULL,   `altbody` longtext NOT NULL,   `published` tinyint(4) DEFAULT '1',   `senddate` int(10) unsigned DEFAULT NULL,   `created` int(10) unsigned DEFAULT NULL,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `bccaddresses` varchar(250) DEFAULT NULL,   `type` enum('news','autonews','followup','unsub','welcome','notification','joomlanotification','action') NOT NULL DEFAULT 'news',   `visible` tinyint(4) NOT NULL DEFAULT '1',   `userid` int(10) unsigned DEFAULT NULL,   `alias` varchar(250) DEFAULT NULL,   `attach` text,   `favicon` text,   `html` tinyint(4) NOT NULL DEFAULT '1',   `tempid` smallint(6) NOT NULL DEFAULT '0',   `key` varchar(200) DEFAULT NULL,   `frequency` varchar(50) DEFAULT NULL,   `params` text,   `sentby` int(10) unsigned DEFAULT NULL,   `metakey` text,   `metadesc` text,   `filter` text,   `language` varchar(50) NOT NULL DEFAULT '',   `abtesting` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `summary` text NOT NULL,   PRIMARY KEY (`mailid`),   KEY `senddate` (`senddate`),   KEY `typemailidindex` (`type`,`mailid`),   KEY `useridindex` (`userid`) ) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"kisya_acymailing_queue";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:496:"CREATE TABLE `#__acymailing_queue` (   `senddate` int(10) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `priority` tinyint(3) unsigned DEFAULT '3',   `try` tinyint(3) unsigned NOT NULL DEFAULT '0',   `paramqueue` varchar(250) DEFAULT NULL,   PRIMARY KEY (`subid`,`mailid`),   KEY `listingindex` (`senddate`,`subid`),   KEY `mailidindex` (`mailid`),   KEY `orderingindex` (`priority`,`senddate`,`subid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"kisya_acymailing_rules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:436:"CREATE TABLE `#__acymailing_rules` (   `ruleid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `ordering` smallint(6) DEFAULT NULL,   `regex` text NOT NULL,   `executed_on` text NOT NULL,   `action_message` text NOT NULL,   `action_user` text NOT NULL,   `published` tinyint(3) unsigned NOT NULL,   PRIMARY KEY (`ruleid`),   KEY `ordering` (`published`,`ordering`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"kisya_acymailing_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:797:"CREATE TABLE `#__acymailing_stats` (   `mailid` mediumint(8) unsigned NOT NULL,   `senthtml` int(10) unsigned NOT NULL DEFAULT '0',   `senttext` int(10) unsigned NOT NULL DEFAULT '0',   `senddate` int(10) unsigned NOT NULL,   `openunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `opentotal` int(10) unsigned NOT NULL DEFAULT '0',   `bounceunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `fail` mediumint(8) unsigned NOT NULL DEFAULT '0',   `clicktotal` int(10) unsigned NOT NULL DEFAULT '0',   `clickunique` mediumint(8) unsigned NOT NULL DEFAULT '0',   `unsub` mediumint(8) unsigned NOT NULL DEFAULT '0',   `forward` mediumint(8) unsigned NOT NULL DEFAULT '0',   `bouncedetails` text,   PRIMARY KEY (`mailid`),   KEY `senddateindex` (`senddate`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:27:"kisya_acymailing_subscriber";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1066:"CREATE TABLE `#__acymailing_subscriber` (   `subid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `email` varchar(200) NOT NULL,   `userid` int(10) unsigned NOT NULL DEFAULT '0',   `name` varchar(250) NOT NULL DEFAULT '',   `created` int(10) unsigned DEFAULT NULL,   `confirmed` tinyint(4) NOT NULL DEFAULT '0',   `enabled` tinyint(4) NOT NULL DEFAULT '1',   `accept` tinyint(4) NOT NULL DEFAULT '1',   `ip` varchar(100) DEFAULT NULL,   `html` tinyint(4) NOT NULL DEFAULT '1',   `key` varchar(250) DEFAULT NULL,   `confirmed_date` int(10) unsigned NOT NULL DEFAULT '0',   `confirmed_ip` varchar(100) DEFAULT NULL,   `lastopen_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastopen_ip` varchar(100) DEFAULT NULL,   `lastclick_date` int(10) unsigned NOT NULL DEFAULT '0',   `lastsent_date` int(10) unsigned NOT NULL DEFAULT '0',   `source` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`subid`),   UNIQUE KEY `email` (`email`),   KEY `userid` (`userid`),   KEY `queueindex` (`enabled`,`accept`,`confirmed`) ) ENGINE=InnoDB AUTO_INCREMENT=4096 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"kisya_acymailing_tag";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:259:"CREATE TABLE `#__acymailing_tag` (   `tagid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `userid` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`tagid`),   KEY `useridindex` (`userid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_acymailing_tagmail";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:194:"CREATE TABLE `#__acymailing_tagmail` (   `tagid` smallint(5) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   PRIMARY KEY (`tagid`,`mailid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"kisya_acymailing_template";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:977:"CREATE TABLE `#__acymailing_template` (   `tempid` smallint(5) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) DEFAULT NULL,   `description` text,   `body` longtext,   `altbody` longtext,   `created` int(10) unsigned DEFAULT NULL,   `published` tinyint(4) NOT NULL DEFAULT '1',   `premium` tinyint(4) NOT NULL DEFAULT '0',   `ordering` smallint(5) unsigned DEFAULT '0',   `namekey` varchar(50) NOT NULL,   `styles` text,   `subject` varchar(250) DEFAULT NULL,   `stylesheet` text,   `fromname` varchar(250) DEFAULT NULL,   `fromemail` varchar(250) DEFAULT NULL,   `replyname` varchar(250) DEFAULT NULL,   `replyemail` varchar(250) DEFAULT NULL,   `thumb` varchar(250) DEFAULT NULL,   `readmore` varchar(250) DEFAULT NULL,   `access` varchar(250) NOT NULL DEFAULT 'all',   `category` varchar(250) NOT NULL DEFAULT '',   PRIMARY KEY (`tempid`),   UNIQUE KEY `namekey` (`namekey`),   KEY `orderingindex` (`ordering`) ) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:20:"kisya_acymailing_url";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:230:"CREATE TABLE `#__acymailing_url` (   `urlid` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(250) NOT NULL,   `url` text NOT NULL,   PRIMARY KEY (`urlid`),   KEY `url` (`url`(250)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:25:"kisya_acymailing_urlclick";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:449:"CREATE TABLE `#__acymailing_urlclick` (   `urlid` int(10) unsigned NOT NULL,   `mailid` mediumint(8) unsigned NOT NULL,   `click` smallint(5) unsigned NOT NULL DEFAULT '0',   `subid` int(10) unsigned NOT NULL,   `date` int(10) unsigned NOT NULL,   `ip` varchar(100) DEFAULT NULL,   PRIMARY KEY (`urlid`,`mailid`,`subid`),   KEY `dateindex` (`date`),   KEY `mailidindex` (`mailid`),   KEY `subidindex` (`subid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:26:"kisya_acymailing_userstats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:868:"CREATE TABLE `#__acymailing_userstats` (   `mailid` mediumint(8) unsigned NOT NULL,   `subid` int(10) unsigned NOT NULL,   `html` tinyint(3) unsigned NOT NULL DEFAULT '1',   `sent` tinyint(3) unsigned NOT NULL DEFAULT '1',   `senddate` int(10) unsigned NOT NULL,   `open` tinyint(3) unsigned NOT NULL DEFAULT '0',   `opendate` int(11) NOT NULL,   `bounce` tinyint(4) NOT NULL DEFAULT '0',   `fail` tinyint(4) NOT NULL DEFAULT '0',   `ip` varchar(100) DEFAULT NULL,   `browser` varchar(255) DEFAULT NULL,   `browser_version` tinyint(3) unsigned DEFAULT NULL,   `is_mobile` tinyint(3) unsigned DEFAULT NULL,   `mobile_os` varchar(255) DEFAULT NULL,   `user_agent` varchar(255) DEFAULT NULL,   `bouncerule` varchar(255) DEFAULT NULL,   PRIMARY KEY (`mailid`,`subid`),   KEY `senddateindex` (`senddate`),   KEY `subidindex` (`subid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:17:"kisya_ak_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:404:"CREATE TABLE `#__ak_profiles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `configuration` longtext COLLATE utf8mb4_unicode_ci,   `filters` longtext COLLATE utf8mb4_unicode_ci,   `quickicon` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"kisya_ak_stats";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1263:"CREATE TABLE `#__ak_stats` (   `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` longtext COLLATE utf8mb4_unicode_ci,   `backupstart` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `backupend` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',   `status` enum('run','fail','complete') COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'run',   `origin` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'backend',   `type` varchar(30) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'full',   `profile_id` bigint(20) NOT NULL DEFAULT '1',   `archivename` longtext COLLATE utf8mb4_unicode_ci,   `absolute_path` longtext COLLATE utf8mb4_unicode_ci,   `multipart` int(11) NOT NULL DEFAULT '0',   `tag` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `backupid` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `filesexist` tinyint(3) NOT NULL DEFAULT '1',   `remote_filename` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `total_size` bigint(20) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_fullstatus` (`filesexist`,`status`),   KEY `idx_stale` (`status`,`origin`) ) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_ak_storage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:319:"CREATE TABLE `#__ak_storage` (   `tag` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `lastupdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,   `data` longtext COLLATE utf8mb4_unicode_ci,   PRIMARY KEY (`tag`(100)) ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"kisya_akeeba_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:203:"CREATE TABLE `#__akeeba_common` (   `key` varchar(255) NOT NULL,   `value` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:12:"kisya_assets";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:911:"CREATE TABLE `#__assets` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set parent.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `level` int(10) unsigned NOT NULL COMMENT 'The cached level in the nested tree.',   `name` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The unique name for the asset.\n',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The descriptive title for the asset.',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_asset_name` (`name`),   KEY `idx_lft_rgt` (`lft`,`rgt`),   KEY `idx_parent_id` (`parent_id`) ) ENGINE=InnoDB AUTO_INCREMENT=167 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"kisya_associations";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:467:"CREATE TABLE `#__associations` (   `id` int(11) NOT NULL COMMENT 'A reference to the associated item.',   `context` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The context of the associated item.',   `key` char(32) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The key for the association computed from an md5 on associated ids.',   PRIMARY KEY (`context`,`id`),   KEY `idx_key` (`key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"kisya_banner_clients";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1046:"CREATE TABLE `#__banner_clients` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `contact` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extrainfo` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(4) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   PRIMARY KEY (`id`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"kisya_banner_tracks";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:437:"CREATE TABLE `#__banner_tracks` (   `track_date` datetime NOT NULL,   `track_type` int(10) unsigned NOT NULL,   `banner_id` int(10) unsigned NOT NULL,   `count` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`track_date`,`track_type`,`banner_id`),   KEY `idx_track_date` (`track_date`),   KEY `idx_track_type` (`track_type`),   KEY `idx_banner_id` (`banner_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"kisya_banners";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2259:"CREATE TABLE `#__banners` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `cid` int(11) NOT NULL DEFAULT '0',   `type` int(11) NOT NULL DEFAULT '0',   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `imptotal` int(11) NOT NULL DEFAULT '0',   `impmade` int(11) NOT NULL DEFAULT '0',   `clicks` int(11) NOT NULL DEFAULT '0',   `clickurl` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `custombannercode` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `sticky` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `own_prefix` tinyint(1) NOT NULL DEFAULT '0',   `metakey_prefix` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `purchase_type` tinyint(4) NOT NULL DEFAULT '-1',   `track_clicks` tinyint(4) NOT NULL DEFAULT '-1',   `track_impressions` tinyint(4) NOT NULL DEFAULT '-1',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `reset` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `idx_state` (`state`),   KEY `idx_own_prefix` (`own_prefix`),   KEY `idx_banner_catid` (`catid`),   KEY `idx_language` (`language`),   KEY `idx_metakey_prefix` (`metakey_prefix`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2142:"CREATE TABLE `#__categories` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the kisya_assets table.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `extension` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   KEY `cat_idx` (`extension`,`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_language` (`language`),   KEY `idx_path` (`path`(100)),   KEY `idx_alias` (`alias`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"kisya_contact_details";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3109:"CREATE TABLE `#__contact_details` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `con_position` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `address` mediumtext COLLATE utf8mb4_unicode_ci,   `suburb` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `state` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `country` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `postcode` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `telephone` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `fax` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `misc` longtext COLLATE utf8mb4_unicode_ci,   `image` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `email_to` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `default_con` tinyint(1) unsigned NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `user_id` int(11) NOT NULL DEFAULT '0',   `catid` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `mobile` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `webpage` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `sortname1` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `sortname2` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `sortname3` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if article is featured.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:15:"kisya_contactus";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:408:"CREATE TABLE `#__contactus` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(100) NOT NULL,   `email` varchar(100) NOT NULL,   `phone` varchar(100) NOT NULL,   `subject` varchar(100) NOT NULL,   `message` text NOT NULL,   `read` tinyint(11) NOT NULL,   `created_at` datetime NOT NULL,   `replied` tinyint(11) NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=1625 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:13:"kisya_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2379:"CREATE TABLE `#__content` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the kisya_assets table.',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `introtext` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   `fulltext` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `attribs` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `ordering` int(11) NOT NULL DEFAULT '0',   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `metadata` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if article is featured.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The language code for the article.',   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'A reference to enable linkages to external data sets.',   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB AUTO_INCREMENT=112 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:23:"kisya_content_frontpage";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:223:"CREATE TABLE `#__content_frontpage` (   `content_id` int(11) NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"kisya_content_rating";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:358:"CREATE TABLE `#__content_rating` (   `content_id` int(11) NOT NULL DEFAULT '0',   `rating_sum` int(10) unsigned NOT NULL DEFAULT '0',   `rating_count` int(10) unsigned NOT NULL DEFAULT '0',   `lastip` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"kisya_content_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:794:"CREATE TABLE `#__content_types` (   `type_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `type_title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `table` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `rules` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `field_mappings` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `router` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content_history_options` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON string for com_contenthistory options',   PRIMARY KEY (`type_id`),   KEY `idx_alias` (`type_alias`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=10007 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:25:"kisya_contentitem_tag_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:892:"CREATE TABLE `#__contentitem_tag_map` (   `type_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_content_id` int(10) unsigned NOT NULL COMMENT 'PK from the core content table',   `content_item_id` int(11) NOT NULL COMMENT 'PK from the content type table',   `tag_id` int(10) unsigned NOT NULL COMMENT 'PK from the tag table',   `tag_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Date of most recent save for this tag-item',   `type_id` mediumint(8) NOT NULL COMMENT 'PK from the content_type table',   UNIQUE KEY `uc_ItemnameTagid` (`type_id`,`content_item_id`,`tag_id`),   KEY `idx_tag_type` (`tag_id`,`type_id`),   KEY `idx_date_id` (`tag_date`,`tag_id`),   KEY `idx_core_content_id` (`core_content_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Maps items from content tables to tags';
";s:12:"dependencies";a:0:{}}s:23:"kisya_core_log_searches";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:230:"CREATE TABLE `#__core_log_searches` (   `search_term` varchar(128) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `hits` int(10) unsigned NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:27:"kisya_csvi_available_fields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:485:"CREATE TABLE `#__csvi_available_fields` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `csvi_name` varchar(255) NOT NULL,   `component_name` varchar(55) NOT NULL,   `component_table` varchar(55) NOT NULL,   `component` varchar(55) NOT NULL,   `isprimary` tinyint(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `component_name_table` (`component_name`,`component_table`,`component`) ) ENGINE=MyISAM AUTO_INCREMENT=632 DEFAULT CHARSET=utf8 COMMENT='Available fields for CSVI';
";s:12:"dependencies";a:0:{}}s:19:"kisya_csvi_currency";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:339:"CREATE TABLE `#__csvi_currency` (   `currency_id` tinyint(4) NOT NULL AUTO_INCREMENT,   `currency_code` varchar(3) DEFAULT NULL,   `currency_rate` varchar(55) DEFAULT NULL,   PRIMARY KEY (`currency_id`),   UNIQUE KEY `currency_code` (`currency_code`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Curriencies and exchange rates for CSVI';
";s:12:"dependencies";a:0:{}}s:23:"kisya_csvi_icecat_index";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:918:"CREATE TABLE `#__csvi_icecat_index` (   `path` varchar(100) DEFAULT NULL,   `product_id` int(2) DEFAULT NULL,   `updated` int(14) DEFAULT NULL,   `quality` varchar(6) DEFAULT NULL,   `supplier_id` int(1) DEFAULT NULL,   `prod_id` varchar(16) DEFAULT NULL,   `catid` int(3) DEFAULT NULL,   `m_prod_id` varchar(10) DEFAULT NULL,   `ean_upc` varchar(10) DEFAULT NULL,   `on_market` int(1) DEFAULT NULL,   `country_market` varchar(10) DEFAULT NULL,   `model_name` varchar(26) DEFAULT NULL,   `product_view` int(5) DEFAULT NULL,   `high_pic` varchar(51) DEFAULT NULL,   `high_pic_size` int(5) DEFAULT NULL,   `high_pic_width` int(3) DEFAULT NULL,   `high_pic_height` int(3) DEFAULT NULL,   `m_supplier_id` int(3) DEFAULT NULL,   `m_supplier_name` varchar(51) DEFAULT NULL,   KEY `product_mpn` (`prod_id`),   KEY `manufacturer_name` (`supplier_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='ICEcat index data for CSVI';
";s:12:"dependencies";a:0:{}}s:27:"kisya_csvi_icecat_suppliers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:308:"CREATE TABLE `#__csvi_icecat_suppliers` (   `supplier_id` int(11) unsigned NOT NULL,   `supplier_name` varchar(255) NOT NULL,   UNIQUE KEY `Unique supplier` (`supplier_id`,`supplier_name`),   KEY `Supplier name` (`supplier_name`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='ICEcat supplier data for CSVI';
";s:12:"dependencies";a:0:{}}s:22:"kisya_csvi_log_details";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:343:"CREATE TABLE `#__csvi_log_details` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `log_id` int(11) NOT NULL,   `line` int(11) NOT NULL,   `description` text NOT NULL,   `result` varchar(45) NOT NULL,   `status` varchar(45) NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=7555460 DEFAULT CHARSET=utf8 COMMENT='Log details for CSVI';
";s:12:"dependencies";a:0:{}}s:15:"kisya_csvi_logs";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:524:"CREATE TABLE `#__csvi_logs` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `userid` int(11) NOT NULL,   `logstamp` datetime NOT NULL,   `action` varchar(255) NOT NULL,   `action_type` varchar(255) NOT NULL DEFAULT '',   `template_name` varchar(255) DEFAULT NULL,   `records` int(11) NOT NULL,   `run_id` int(11) DEFAULT NULL,   `file_name` varchar(255) DEFAULT NULL,   `run_cancelled` tinyint(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=411 DEFAULT CHARSET=utf8 COMMENT='Log results for CSVI';
";s:12:"dependencies";a:0:{}}s:27:"kisya_csvi_related_products";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:191:"CREATE TABLE `#__csvi_related_products` (   `product_sku` varchar(64) NOT NULL,   `related_sku` text NOT NULL ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Related products import for CSVI';
";s:12:"dependencies";a:0:{}}s:23:"kisya_csvi_replacements";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:468:"CREATE TABLE `#__csvi_replacements` (   `id` int(10) NOT NULL AUTO_INCREMENT,   `name` varchar(100) NOT NULL,   `findtext` text NOT NULL,   `replacetext` text NOT NULL,   `multivalue` enum('0','1') NOT NULL,   `method` enum('text','regex') NOT NULL DEFAULT 'text',   `checked_out` int(11) unsigned DEFAULT '0',   `checked_out_time` datetime DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Replacement rules for CSVI';
";s:12:"dependencies";a:0:{}}s:19:"kisya_csvi_settings";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:216:"CREATE TABLE `#__csvi_settings` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `params` text NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='Configuration values for CSVI';
";s:12:"dependencies";a:0:{}}s:28:"kisya_csvi_template_settings";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:386:"CREATE TABLE `#__csvi_template_settings` (   `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Unique ID for the saved setting',   `name` varchar(255) NOT NULL COMMENT 'Name for the saved setting',   `settings` text NOT NULL COMMENT 'The actual settings',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COMMENT='Stores the template settings for CSVI';
";s:12:"dependencies";a:0:{}}s:26:"kisya_csvi_template_tables";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:592:"CREATE TABLE `#__csvi_template_tables` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `template_type_name` varchar(55) NOT NULL,   `template_table` varchar(55) NOT NULL,   `component` varchar(55) NOT NULL,   `indexed` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `type_name` (`template_type_name`,`template_table`,`component`) ) ENGINE=MyISAM AUTO_INCREMENT=309 DEFAULT CHARSET=utf8 COMMENT='Template tables used per template type for CSVI';
";s:12:"dependencies";a:0:{}}s:25:"kisya_csvi_template_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:750:"CREATE TABLE `#__csvi_template_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `template_type_name` varchar(55) NOT NULL,   `template_type` varchar(55) NOT NULL,   `component` varchar(55) NOT NULL COMMENT 'Name of the component',   `url` varchar(100) DEFAULT NULL COMMENT 'The URL of the page the import is for',   `options` varchar(255) NOT NULL DEFAULT 'fields' COMMENT 'The template pages to show for the template type',   PRIMARY KEY (`id`),   UNIQUE KEY `type_name` (`template_type_name`,`template_type`,`component`) ) ENGINE=MyISAM AUTO_INCREMENT=141 DEFAULT CHARSET=utf8 COMMENT='Template types for CSVI';
";s:12:"dependencies";a:0:{}}s:19:"kisya_djimageslider";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:740:"CREATE TABLE `#__djimageslider` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) NOT NULL,   `alias` varchar(255) NOT NULL DEFAULT '',   `image` varchar(255) NOT NULL,   `description` text NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `params` text NOT NULL,   PRIMARY KEY (`id`),   KEY `catid` (`catid`,`published`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:16:"kisya_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1237:"CREATE TABLE `#__extensions` (   `extension_id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `folder` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(3) NOT NULL,   `enabled` tinyint(3) NOT NULL DEFAULT '1',   `access` int(10) unsigned NOT NULL DEFAULT '1',   `protected` tinyint(3) NOT NULL DEFAULT '0',   `manifest_cache` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `custom_data` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `system_data` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) DEFAULT '0',   `state` int(11) DEFAULT '0',   PRIMARY KEY (`extension_id`),   KEY `element_clientid` (`element`,`client_id`),   KEY `element_folder_clientid` (`element`,`folder`,`client_id`),   KEY `extension` (`type`,`element`,`folder`,`client_id`) ) ENGINE=InnoDB AUTO_INCREMENT=10109 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"kisya_finder_filters";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:762:"CREATE TABLE `#__finder_filters` (   `filter_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(255) NOT NULL,   `alias` varchar(255) NOT NULL,   `state` tinyint(1) NOT NULL DEFAULT '1',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL,   `created_by_alias` varchar(255) NOT NULL,   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `map_count` int(10) unsigned NOT NULL DEFAULT '0',   `data` mediumtext NOT NULL,   `params` longtext,   PRIMARY KEY (`filter_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"kisya_finder_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:1321:"CREATE TABLE `#__finder_links` (   `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `url` varchar(255) NOT NULL,   `route` varchar(255) NOT NULL,   `title` varchar(400) DEFAULT NULL,   `description` varchar(255) DEFAULT NULL,   `indexdate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `md5sum` varchar(32) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `state` int(5) DEFAULT '1',   `access` int(5) DEFAULT '0',   `language` varchar(8) NOT NULL,   `publish_start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `start_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `end_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `list_price` double unsigned NOT NULL DEFAULT '0',   `sale_price` double unsigned NOT NULL DEFAULT '0',   `type_id` int(11) NOT NULL,   `object` mediumblob NOT NULL,   PRIMARY KEY (`link_id`),   KEY `idx_type` (`type_id`),   KEY `idx_md5` (`md5sum`),   KEY `idx_url` (`url`(75)),   KEY `idx_published_list` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`list_price`),   KEY `idx_published_sale` (`published`,`state`,`access`,`publish_start_date`,`publish_end_date`,`sale_price`),   KEY `idx_title` (`title`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms0";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms0` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms1";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms1` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms2";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms2` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms3";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms3` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms4";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms4` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms5";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms5` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms6";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms6` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms7";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms7` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms8";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms8` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_terms9";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_terms9` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termsa";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsa` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termsb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsb` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termsc";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsc` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termsd";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsd` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termse";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termse` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_links_termsf";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:338:"CREATE TABLE `#__finder_links_termsf` (   `link_id` int(10) unsigned NOT NULL,   `term_id` int(10) unsigned NOT NULL,   `weight` float unsigned NOT NULL,   PRIMARY KEY (`link_id`,`term_id`),   KEY `idx_term_weight` (`term_id`,`weight`),   KEY `idx_link_term_weight` (`link_id`,`term_id`,`weight`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:21:"kisya_finder_taxonomy";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:587:"CREATE TABLE `#__finder_taxonomy` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `title` varchar(255) NOT NULL,   `state` tinyint(1) unsigned NOT NULL DEFAULT '1',   `access` tinyint(1) unsigned NOT NULL DEFAULT '0',   `ordering` tinyint(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   KEY `parent_id` (`parent_id`),   KEY `state` (`state`),   KEY `ordering` (`ordering`),   KEY `access` (`access`),   KEY `idx_parent_published` (`parent_id`,`state`,`access`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_taxonomy_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:253:"CREATE TABLE `#__finder_taxonomy_map` (   `link_id` int(10) unsigned NOT NULL,   `node_id` int(10) unsigned NOT NULL,   PRIMARY KEY (`link_id`,`node_id`),   KEY `link_id` (`link_id`),   KEY `node_id` (`node_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"kisya_finder_terms";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:655:"CREATE TABLE `#__finder_terms` (   `term_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '0',   `soundex` varchar(75) NOT NULL,   `links` int(10) NOT NULL DEFAULT '0',   `language` char(3) NOT NULL DEFAULT '',   PRIMARY KEY (`term_id`),   UNIQUE KEY `idx_term` (`term`),   KEY `idx_term_phrase` (`term`,`phrase`),   KEY `idx_stem_phrase` (`stem`,`phrase`),   KEY `idx_soundex_phrase` (`soundex`,`phrase`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:25:"kisya_finder_terms_common";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:219:"CREATE TABLE `#__finder_terms_common` (   `term` varchar(75) NOT NULL,   `language` varchar(3) NOT NULL,   KEY `idx_word_lang` (`term`,`language`),   KEY `idx_lang` (`language`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:19:"kisya_finder_tokens";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:446:"CREATE TABLE `#__finder_tokens` (   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `weight` float unsigned NOT NULL DEFAULT '1',   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `language` char(3) NOT NULL DEFAULT '',   KEY `idx_word` (`term`),   KEY `idx_context` (`context`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:29:"kisya_finder_tokens_aggregate";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:603:"CREATE TABLE `#__finder_tokens_aggregate` (   `term_id` int(10) unsigned NOT NULL,   `map_suffix` char(1) NOT NULL,   `term` varchar(75) NOT NULL,   `stem` varchar(75) NOT NULL,   `common` tinyint(1) unsigned NOT NULL DEFAULT '0',   `phrase` tinyint(1) unsigned NOT NULL DEFAULT '0',   `term_weight` float unsigned NOT NULL,   `context` tinyint(1) unsigned NOT NULL DEFAULT '2',   `context_weight` float unsigned NOT NULL,   `total_weight` float unsigned NOT NULL,   `language` char(3) NOT NULL DEFAULT '',   KEY `token` (`term`),   KEY `keyword_id` (`term_id`) ) ENGINE=MEMORY DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:18:"kisya_finder_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:241:"CREATE TABLE `#__finder_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(100) NOT NULL,   `mime` varchar(100) NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `title` (`title`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
";s:12:"dependencies";a:0:{}}s:14:"kisya_jaem_log";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:312:"CREATE TABLE `#__jaem_log` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `ext_id` varchar(50) DEFAULT NULL,   `service_id` int(11) DEFAULT NULL,   `check_date` datetime DEFAULT NULL,   `check_info` text,   PRIMARY KEY (`id`),   UNIQUE KEY `ext_id` (`ext_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:19:"kisya_jaem_services";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:432:"CREATE TABLE `#__jaem_services` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `ws_name` varchar(255) NOT NULL,   `ws_mode` varchar(50) NOT NULL DEFAULT 'local',   `ws_uri` varchar(255) NOT NULL,   `ws_user` varchar(100) NOT NULL,   `ws_pass` varchar(100) NOT NULL,   `ws_default` tinyint(1) NOT NULL DEFAULT '0',   `ws_core` tinyint(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:10:"kisya_jumi";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:442:"CREATE TABLE `#__jumi` (   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `title` varchar(255) NOT NULL,   `alias` varchar(255) NOT NULL,   `path` varchar(255) DEFAULT NULL,   `custom_script` text,   `access` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `published` int(11) NOT NULL DEFAULT '1',   PRIMARY KEY (`id`),   UNIQUE KEY `id` (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:15:"kisya_languages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1117:"CREATE TABLE `#__languages` (   `lang_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(11) NOT NULL,   `lang_code` char(7) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,   `title` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `title_native` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `sef` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `image` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(512) COLLATE utf8mb4_unicode_ci NOT NULL,   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `sitename` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `published` int(11) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `ordering` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`lang_id`),   UNIQUE KEY `idx_sef` (`sef`),   UNIQUE KEY `idx_image` (`image`),   UNIQUE KEY `idx_langcode` (`lang_code`),   KEY `idx_access` (`access`),   KEY `idx_ordering` (`ordering`) ) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:10:"kisya_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2734:"CREATE TABLE `#__menu` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of menu this item belongs to. FK to #__menu_types.menutype',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The display title of the menu item.',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT 'The SEF alias of the menu item.',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `path` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The computed path of the menu item based on the alias field.',   `link` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The actually link the menu item refers to.',   `type` varchar(16) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The type of link: Component, URL, Alias, Separator',   `published` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The published state of the menu link.',   `parent_id` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'The parent menu item in the menu tree.',   `level` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The relative level in the tree.',   `component_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to kisya_extensions.id',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to kisya_users.id',   `checked_out_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The time the menu item was checked out.',   `browserNav` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'The click behaviour of the link.',   `access` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'The access level required to view the menu item.',   `img` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The image of the menu item.',   `template_style_id` int(10) unsigned NOT NULL DEFAULT '0',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded data for the menu item.',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `home` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Indicates if this menu item is the home or default page.',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(4) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_client_id_parent_id_alias_language` (`client_id`,`parent_id`,`alias`(100),`language`),   KEY `idx_componentid` (`component_id`,`menutype`,`published`,`access`),   KEY `idx_menutype` (`menutype`),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_language` (`language`),   KEY `idx_alias` (`alias`(100)),   KEY `idx_path` (`path`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=216 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_menu_types";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:457:"CREATE TABLE `#__menu_types` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `asset_id` int(11) NOT NULL,   `menutype` varchar(24) COLLATE utf8mb4_unicode_ci NOT NULL,   `title` varchar(48) COLLATE utf8mb4_unicode_ci NOT NULL,   `description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_menutype` (`menutype`) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"kisya_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:708:"CREATE TABLE `#__messages` (   `message_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id_from` int(10) unsigned NOT NULL DEFAULT '0',   `user_id_to` int(10) unsigned NOT NULL DEFAULT '0',   `folder_id` tinyint(3) unsigned NOT NULL DEFAULT '0',   `date_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `state` tinyint(1) NOT NULL DEFAULT '0',   `priority` tinyint(1) unsigned NOT NULL DEFAULT '0',   `subject` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `message` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`message_id`),   KEY `useridto_state` (`user_id_to`,`state`) ) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"kisya_messages_cfg";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:357:"CREATE TABLE `#__messages_cfg` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `cfg_name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `cfg_value` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   UNIQUE KEY `idx_user_var_name` (`user_id`,`cfg_name`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"kisya_modules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1337:"CREATE TABLE `#__modules` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `asset_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'FK to the #__assets table.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `content` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   `position` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `published` tinyint(1) NOT NULL DEFAULT '0',   `module` varchar(50) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `access` int(10) unsigned NOT NULL DEFAULT '0',   `showtitle` tinyint(3) unsigned NOT NULL DEFAULT '1',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `client_id` tinyint(4) NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `published` (`published`,`access`),   KEY `newsfeeds` (`module`,`published`),   KEY `idx_language` (`language`) ) ENGINE=InnoDB AUTO_INCREMENT=128 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"kisya_modules_menu";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:221:"CREATE TABLE `#__modules_menu` (   `moduleid` int(11) NOT NULL DEFAULT '0',   `menuid` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`moduleid`,`menuid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:15:"kisya_newsfeeds";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2189:"CREATE TABLE `#__newsfeeds` (   `catid` int(11) NOT NULL DEFAULT '0',   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `link` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `numarticles` int(10) unsigned NOT NULL DEFAULT '1',   `cache_time` int(10) unsigned NOT NULL DEFAULT '3600',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `rtl` tinyint(4) NOT NULL DEFAULT '0',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadata` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `images` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`published`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:15:"kisya_overrider";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:362:"CREATE TABLE `#__overrider` (   `id` int(10) NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `constant` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `string` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `file` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:26:"kisya_postinstall_messages";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1607:"CREATE TABLE `#__postinstall_messages` (   `postinstall_message_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,   `extension_id` bigint(20) NOT NULL DEFAULT '700' COMMENT 'FK to #__extensions',   `title_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for the title',   `description_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Lang key for description',   `action_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `language_extension` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'com_postinstall' COMMENT 'Extension holding lang keys',   `language_client_id` tinyint(3) NOT NULL DEFAULT '1',   `type` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'link' COMMENT 'Message type - message, link, action',   `action_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'RAD URI to the PHP file containing action method',   `action` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT '' COMMENT 'Action method name or URL',   `condition_file` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'RAD URI to file holding display condition method',   `condition_method` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT 'Display condition method, must return boolean',   `version_introduced` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '3.2.0' COMMENT 'Version when this message was introduced',   `enabled` tinyint(3) NOT NULL DEFAULT '1',   PRIMARY KEY (`postinstall_message_id`) ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:20:"kisya_redirect_links";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:794:"CREATE TABLE `#__redirect_links` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `old_url` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `new_url` varchar(2048) COLLATE utf8mb4_unicode_ci DEFAULT NULL,   `referer` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL,   `comment` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `published` tinyint(4) NOT NULL,   `created_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `header` smallint(3) NOT NULL DEFAULT '301',   PRIMARY KEY (`id`),   KEY `idx_link_modifed` (`modified_date`),   KEY `idx_old_url` (`old_url`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=13048 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"kisya_schemas";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:239:"CREATE TABLE `#__schemas` (   `extension_id` int(11) NOT NULL,   `version_id` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`extension_id`,`version_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:13:"kisya_session";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:0;s:6:"create";s:553:"CREATE TABLE `#__session` (   `session_id` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(3) unsigned NOT NULL DEFAULT '0',   `guest` tinyint(4) unsigned DEFAULT '1',   `time` varchar(14) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` longtext COLLATE utf8mb4_unicode_ci,   `userid` int(11) DEFAULT '0',   `username` varchar(150) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`session_id`),   KEY `userid` (`userid`),   KEY `time` (`time`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:10:"kisya_tags";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2294:"CREATE TABLE `#__tags` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `parent_id` int(10) unsigned NOT NULL DEFAULT '0',   `lft` int(11) NOT NULL DEFAULT '0',   `rgt` int(11) NOT NULL DEFAULT '0',   `level` int(10) unsigned NOT NULL DEFAULT '0',   `path` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   `published` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `access` int(10) unsigned NOT NULL DEFAULT '0',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `metadesc` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta description for the page.',   `metakey` varchar(1024) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'The meta keywords for the page.',   `metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded metadata properties.',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `modified_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `images` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `urls` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `hits` int(10) unsigned NOT NULL DEFAULT '0',   `language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `version` int(10) unsigned NOT NULL DEFAULT '1',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `tag_idx` (`published`,`access`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_left_right` (`lft`,`rgt`),   KEY `idx_language` (`language`),   KEY `idx_path` (`path`(100)),   KEY `idx_alias` (`alias`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"kisya_template_styles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:579:"CREATE TABLE `#__template_styles` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `template` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `client_id` tinyint(1) unsigned NOT NULL DEFAULT '0',   `home` char(7) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '0',   `title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_template` (`template`),   KEY `idx_home` (`home`) ) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:14:"kisya_ucm_base";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:397:"CREATE TABLE `#__ucm_base` (   `ucm_id` int(10) unsigned NOT NULL,   `ucm_item_id` int(10) NOT NULL,   `ucm_type_id` int(11) NOT NULL,   `ucm_language_id` int(11) NOT NULL,   PRIMARY KEY (`ucm_id`),   KEY `idx_ucm_item_id` (`ucm_item_id`),   KEY `idx_ucm_type_id` (`ucm_type_id`),   KEY `idx_ucm_language_id` (`ucm_language_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:17:"kisya_ucm_content";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:3039:"CREATE TABLE `#__ucm_content` (   `core_content_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `core_type_alias` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'FK to the content types table',   `core_title` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL,   `core_alias` varchar(400) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '',   `core_body` longtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_state` tinyint(1) NOT NULL DEFAULT '0',   `core_checked_out_time` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_checked_out_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_access` int(10) unsigned NOT NULL DEFAULT '0',   `core_params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_featured` tinyint(4) unsigned NOT NULL DEFAULT '0',   `core_metadata` varchar(2048) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded metadata properties.',   `core_created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `core_created_by_alias` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `core_created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_modified_user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Most recent user that modified',   `core_modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `core_language` char(7) COLLATE utf8mb4_unicode_ci NOT NULL,   `core_publish_up` datetime NOT NULL,   `core_publish_down` datetime NOT NULL,   `core_content_item_id` int(10) unsigned DEFAULT NULL COMMENT 'ID from the individual type table',   `asset_id` int(10) unsigned DEFAULT NULL COMMENT 'FK to the #__assets table.',   `core_images` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_urls` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_hits` int(10) unsigned NOT NULL DEFAULT '0',   `core_version` int(10) unsigned NOT NULL DEFAULT '1',   `core_ordering` int(11) NOT NULL DEFAULT '0',   `core_metakey` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_metadesc` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `core_catid` int(10) unsigned NOT NULL DEFAULT '0',   `core_xreference` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'A reference to enable linkages to external data sets.',   `core_type_id` int(10) unsigned DEFAULT NULL,   PRIMARY KEY (`core_content_id`),   KEY `tag_idx` (`core_state`,`core_access`),   KEY `idx_access` (`core_access`),   KEY `idx_language` (`core_language`),   KEY `idx_modified_time` (`core_modified_time`),   KEY `idx_created_time` (`core_created_time`),   KEY `idx_core_modified_user_id` (`core_modified_user_id`),   KEY `idx_core_checked_out_user_id` (`core_checked_out_user_id`),   KEY `idx_core_created_user_id` (`core_created_user_id`),   KEY `idx_core_type_id` (`core_type_id`),   KEY `idx_alias` (`core_alias`(100)),   KEY `idx_title` (`core_title`(100)),   KEY `idx_content_type` (`core_type_alias`(100)) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Contains core content data in name spaced fields';
";s:12:"dependencies";a:0:{}}s:17:"kisya_ucm_history";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1015:"CREATE TABLE `#__ucm_history` (   `version_id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `ucm_item_id` int(10) unsigned NOT NULL,   `ucm_type_id` int(10) unsigned NOT NULL,   `version_note` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Optional version name',   `save_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `editor_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `character_count` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Number of characters in this version.',   `sha1_hash` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'SHA1 hash of the version_data column.',   `version_data` longtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'json-encoded string of version data',   `keep_forever` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0=auto delete; 1=keep',   PRIMARY KEY (`version_id`),   KEY `idx_ucm_item_id` (`ucm_type_id`,`ucm_item_id`),   KEY `idx_save_date` (`save_date`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:18:"kisya_update_sites";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:560:"CREATE TABLE `#__update_sites` (   `update_site_id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `location` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `enabled` int(11) DEFAULT '0',   `last_check_timestamp` bigint(20) DEFAULT '0',   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_site_id`) ) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Update Sites';
";s:12:"dependencies";a:0:{}}s:29:"kisya_update_sites_extensions";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:299:"CREATE TABLE `#__update_sites_extensions` (   `update_site_id` int(11) NOT NULL DEFAULT '0',   `extension_id` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`update_site_id`,`extension_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Links extensions to update sites';
";s:12:"dependencies";a:0:{}}s:13:"kisya_updates";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:957:"CREATE TABLE `#__updates` (   `update_id` int(11) NOT NULL AUTO_INCREMENT,   `update_site_id` int(11) DEFAULT '0',   `extension_id` int(11) DEFAULT '0',   `name` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `description` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `element` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT '',   `type` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `folder` varchar(20) COLLATE utf8mb4_unicode_ci DEFAULT '',   `client_id` tinyint(3) DEFAULT '0',   `version` varchar(32) COLLATE utf8mb4_unicode_ci DEFAULT '',   `data` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `detailsurl` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `infourl` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `extra_query` varchar(1000) COLLATE utf8mb4_unicode_ci DEFAULT '',   PRIMARY KEY (`update_id`) ) ENGINE=InnoDB AUTO_INCREMENT=401 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Available Updates';
";s:12:"dependencies";a:0:{}}s:15:"kisya_user_keys";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:641:"CREATE TABLE `#__user_keys` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL,   `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   `series` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,   `invalid` tinyint(4) NOT NULL,   `time` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL,   `uastring` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `series` (`series`),   UNIQUE KEY `series_2` (`series`),   UNIQUE KEY `series_3` (`series`),   KEY `user_id` (`user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_user_notes";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1070:"CREATE TABLE `#__user_notes` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `user_id` int(10) unsigned NOT NULL DEFAULT '0',   `catid` int(10) unsigned NOT NULL DEFAULT '0',   `subject` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `body` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `state` tinyint(3) NOT NULL DEFAULT '0',   `checked_out` int(10) unsigned NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_user_id` int(10) unsigned NOT NULL DEFAULT '0',   `created_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_user_id` int(10) unsigned NOT NULL,   `modified_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `review_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   PRIMARY KEY (`id`),   KEY `idx_user_id` (`user_id`),   KEY `idx_category_id` (`catid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:19:"kisya_user_profiles";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:416:"CREATE TABLE `#__user_profiles` (   `user_id` int(11) NOT NULL,   `profile_key` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,   `profile_value` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `ordering` int(11) NOT NULL DEFAULT '0',   UNIQUE KEY `idx_user_id_profile_key` (`user_id`,`profile_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Simple user profile storage table';
";s:12:"dependencies";a:0:{}}s:24:"kisya_user_usergroup_map";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:332:"CREATE TABLE `#__user_usergroup_map` (   `user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to kisya_users.id',   `group_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Foreign Key to kisya_usergroups.id',   PRIMARY KEY (`user_id`,`group_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_usergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:725:"CREATE TABLE `#__usergroups` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `parent_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Adjacency List Reference Id',   `lft` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set lft.',   `rgt` int(11) NOT NULL DEFAULT '0' COMMENT 'Nested set rgt.',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_usergroup_parent_title_lookup` (`parent_id`,`title`),   KEY `idx_usergroup_title_lookup` (`title`),   KEY `idx_usergroup_adjacency_lookup` (`parent_id`),   KEY `idx_usergroup_nested_set_lookup` (`lft`,`rgt`) ) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:11:"kisya_users";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1474:"CREATE TABLE `#__users` (   `id` int(11) NOT NULL AUTO_INCREMENT,   `name` varchar(400) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `username` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `password` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `block` tinyint(4) NOT NULL DEFAULT '0',   `sendEmail` tinyint(4) DEFAULT '0',   `registerDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `lastvisitDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `activation` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `params` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,   `lastResetTime` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Date of last password reset',   `resetCount` int(11) NOT NULL DEFAULT '0' COMMENT 'Count of password resets since lastResetTime',   `otpKey` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'Two factor authentication encrypted keys',   `otep` varchar(1000) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT 'One time emergency passwords',   `requireReset` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'Require user to reset password on next login',   PRIMARY KEY (`id`),   KEY `idx_block` (`block`),   KEY `username` (`username`),   KEY `email` (`email`),   KEY `idx_name` (`name`(100)) ) ENGINE=InnoDB AUTO_INCREMENT=4147 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:21:"kisya_utf8_conversion";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:150:"CREATE TABLE `#__utf8_conversion` (   `converted` tinyint(4) NOT NULL DEFAULT '0' ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:16:"kisya_viewlevels";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:476:"CREATE TABLE `#__viewlevels` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary Key',   `title` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',   `ordering` int(11) NOT NULL DEFAULT '0',   `rules` varchar(5120) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'JSON encoded access control.',   PRIMARY KEY (`id`),   UNIQUE KEY `idx_assetgroup_title_lookup` (`title`) ) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
";s:12:"dependencies";a:0:{}}s:33:"kisya_virtuemart_adminmenuentries";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:887:"CREATE TABLE `#__virtuemart_adminmenuentries` (   `id` tinyint(1) unsigned NOT NULL AUTO_INCREMENT,   `module_id` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT 'THE ID OF THE VM MODULE, THIS ITEM IS ASSIGNED TO',   `parent_id` tinyint(1) unsigned NOT NULL DEFAULT '0',   `name` char(64) NOT NULL DEFAULT '0',   `link` char(64) NOT NULL DEFAULT '0',   `depends` char(64) NOT NULL DEFAULT '' COMMENT 'Names of the Parameters, this Item depends on',   `icon_class` char(96) DEFAULT NULL,   `ordering` int(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `tooltip` char(128) DEFAULT NULL,   `view` char(32) DEFAULT NULL,   `task` char(32) DEFAULT NULL,   PRIMARY KEY (`id`),   KEY `module_id` (`module_id`),   KEY `published` (`published`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=31 DEFAULT CHARSET=utf8 COMMENT='Administration Menu Items';
";s:12:"dependencies";a:0:{}}s:32:"kisya_virtuemart_calc_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:363:"CREATE TABLE `#__virtuemart_calc_categories` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_category_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_calc_id` (`virtuemart_calc_id`,`virtuemart_category_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_calc_countries";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:360:"CREATE TABLE `#__virtuemart_calc_countries` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_country_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_calc_id` (`virtuemart_calc_id`,`virtuemart_country_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:35:"kisya_virtuemart_calc_manufacturers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:374:"CREATE TABLE `#__virtuemart_calc_manufacturers` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_manufacturer_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_calc_id` (`virtuemart_calc_id`,`virtuemart_manufacturer_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:35:"kisya_virtuemart_calc_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:374:"CREATE TABLE `#__virtuemart_calc_shoppergroups` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_shoppergroup_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_calc_id` (`virtuemart_calc_id`,`virtuemart_shoppergroup_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:28:"kisya_virtuemart_calc_states";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:353:"CREATE TABLE `#__virtuemart_calc_states` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_state_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_calc_id` (`virtuemart_calc_id`,`virtuemart_state_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"kisya_virtuemart_calcs";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2015:"CREATE TABLE `#__virtuemart_calcs` (   `virtuemart_calc_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1' COMMENT 'BELONGS TO VENDOR',   `calc_jplugin_id` int(1) NOT NULL DEFAULT '0',   `calc_name` varchar(64) NOT NULL DEFAULT '' COMMENT 'NAME OF THE RULE',   `calc_descr` varchar(128) NOT NULL DEFAULT '' COMMENT 'DESCRIPTION',   `calc_kind` varchar(16) NOT NULL DEFAULT '' COMMENT 'DISCOUNT/TAX/MARGIN/COMMISSION',   `calc_value_mathop` varchar(8) NOT NULL DEFAULT '' COMMENT 'THE MATHEMATICAL OPERATION LIKE (+,-,+%,-%)',   `calc_value` decimal(10,4) NOT NULL DEFAULT '0.0000' COMMENT 'The Amount',   `calc_currency` smallint(1) unsigned NOT NULL DEFAULT '0' COMMENT 'Currency of the Rule',   `calc_shopper_published` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Visible for Shoppers',   `calc_vendor_published` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Visible for Vendors',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Startdate if nothing is set = permanent',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Enddate if nothing is set = permanent',   `for_override` tinyint(1) NOT NULL DEFAULT '0',   `calc_params` varchar(18000) NOT NULL DEFAULT '',   `ordering` int(1) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_calc_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `published` (`published`),   KEY `calc_kind` (`calc_kind`),   KEY `shared` (`shared`),   KEY `publish_up` (`publish_up`),   KEY `publish_down` (`publish_down`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:22:"kisya_virtuemart_carts";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:677:"CREATE TABLE `#__virtuemart_carts` (   `virtuemart_cart_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_user_id` int(1) unsigned NOT NULL,   `virtuemart_vendor_id` int(1) unsigned NOT NULL,   `cartData` varbinary(50000) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_cart_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `virtuemart_user_id` (`virtuemart_user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Used to store the cart';
";s:12:"dependencies";a:0:{}}s:27:"kisya_virtuemart_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1482:"CREATE TABLE `#__virtuemart_categories` (   `virtuemart_category_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1' COMMENT 'BELONGS TO VENDOR',   `category_template` char(128) DEFAULT NULL,   `category_layout` char(64) DEFAULT NULL,   `category_product_layout` char(64) DEFAULT NULL,   `products_per_row` tinyint(1) DEFAULT NULL,   `limit_list_step` char(32) DEFAULT NULL,   `limit_list_start` smallint(1) unsigned DEFAULT NULL,   `limit_list_max` smallint(1) unsigned DEFAULT NULL,   `limit_list_initial` smallint(1) unsigned DEFAULT NULL,   `hits` int(1) unsigned NOT NULL DEFAULT '0',   `metarobot` char(40) NOT NULL DEFAULT '',   `metaauthor` char(64) NOT NULL DEFAULT '',   `ordering` int(1) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_category_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `published` (`published`),   KEY `shared` (`shared`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=24801 DEFAULT CHARSET=utf8 COMMENT='Product Categories are stored here';
";s:12:"dependencies";a:0:{}}s:33:"kisya_virtuemart_categories_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:500:"CREATE TABLE `#__virtuemart_categories_en_gb` (   `virtuemart_category_id` int(1) unsigned NOT NULL,   `category_name` char(180) NOT NULL DEFAULT '',   `category_description` varchar(20000) NOT NULL DEFAULT '',   `metadesc` varchar(400) NOT NULL DEFAULT '',   `metakey` varchar(400) NOT NULL DEFAULT '',   `customtitle` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_category_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:33:"kisya_virtuemart_categories_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:500:"CREATE TABLE `#__virtuemart_categories_ru_ru` (   `virtuemart_category_id` int(1) unsigned NOT NULL,   `category_name` char(180) NOT NULL DEFAULT '',   `category_description` varchar(20000) NOT NULL DEFAULT '',   `metadesc` varchar(400) NOT NULL DEFAULT '',   `metakey` varchar(400) NOT NULL DEFAULT '',   `customtitle` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_category_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:36:"kisya_virtuemart_category_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:546:"CREATE TABLE `#__virtuemart_category_categories` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `category_parent_id` int(1) unsigned NOT NULL DEFAULT '0',   `category_child_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `category_parent_id` (`category_parent_id`,`category_child_id`),   KEY `category_child_id` (`category_child_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=24801 DEFAULT CHARSET=utf8 COMMENT='Category child-parent relation list';
";s:12:"dependencies";a:0:{}}s:32:"kisya_virtuemart_category_medias";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:462:"CREATE TABLE `#__virtuemart_category_medias` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_category_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_media_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_category_id` (`virtuemart_category_id`,`virtuemart_media_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=6989 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_configs";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:586:"CREATE TABLE `#__virtuemart_configs` (   `virtuemart_config_id` tinyint(1) unsigned NOT NULL AUTO_INCREMENT,   `config` text,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_config_id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='Holds configuration settings';
";s:12:"dependencies";a:0:{}}s:26:"kisya_virtuemart_countries";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1019:"CREATE TABLE `#__virtuemart_countries` (   `virtuemart_country_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_worldzone_id` tinyint(1) NOT NULL DEFAULT '1',   `country_name` varchar(64) DEFAULT NULL,   `country_3_code` char(3) DEFAULT NULL,   `country_2_code` char(2) DEFAULT NULL,   `ordering` int(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_country_id`),   KEY `country_3_code` (`country_3_code`),   KEY `country_2_code` (`country_2_code`),   KEY `country_name` (`country_name`),   KEY `ordering` (`ordering`),   KEY `published` (`published`) ) ENGINE=MyISAM AUTO_INCREMENT=249 DEFAULT CHARSET=utf8 COMMENT='Country records';
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_coupons";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1256:"CREATE TABLE `#__virtuemart_coupons` (   `virtuemart_coupon_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL,   `coupon_code` varchar(32) NOT NULL DEFAULT '',   `percent_or_total` enum('percent','total') NOT NULL DEFAULT 'percent',   `coupon_type` enum('gift','permanent') NOT NULL DEFAULT 'gift',   `coupon_value` decimal(15,5) NOT NULL DEFAULT '0.00000',   `coupon_start_date` datetime DEFAULT NULL,   `coupon_expiry_date` datetime DEFAULT NULL,   `coupon_value_valid` decimal(15,5) NOT NULL DEFAULT '0.00000',   `coupon_used` varchar(200) NOT NULL DEFAULT '',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_coupon_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `coupon_code` (`coupon_code`),   KEY `coupon_type` (`coupon_type`),   KEY `published` (`published`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Used to store coupon codes';
";s:12:"dependencies";a:0:{}}s:27:"kisya_virtuemart_currencies";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1595:"CREATE TABLE `#__virtuemart_currencies` (   `virtuemart_currency_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `currency_name` varchar(64) DEFAULT NULL,   `currency_code_2` char(2) DEFAULT NULL,   `currency_code_3` char(3) DEFAULT NULL,   `currency_numeric_code` int(4) DEFAULT NULL,   `currency_exchange_rate` decimal(10,5) DEFAULT NULL,   `currency_symbol` varchar(8) DEFAULT NULL,   `currency_decimal_place` varchar(8) DEFAULT NULL,   `currency_decimal_symbol` varchar(8) DEFAULT NULL,   `currency_thousands` varchar(8) DEFAULT NULL,   `currency_positive_style` varchar(64) DEFAULT NULL,   `currency_negative_style` varchar(64) DEFAULT NULL,   `ordering` int(1) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '1',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_currency_id`),   UNIQUE KEY `currency_code_3` (`currency_code_3`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `ordering` (`ordering`),   KEY `currency_name` (`currency_name`),   KEY `published` (`published`),   KEY `shared` (`shared`),   KEY `currency_numeric_code` (`currency_numeric_code`) ) ENGINE=MyISAM AUTO_INCREMENT=202 DEFAULT CHARSET=utf8 COMMENT='Used to store currencies';
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_customs";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2360:"CREATE TABLE `#__virtuemart_customs` (   `virtuemart_custom_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `custom_parent_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `custom_jplugin_id` int(1) NOT NULL DEFAULT '0',   `custom_element` varchar(50) NOT NULL DEFAULT '',   `admin_only` tinyint(1) NOT NULL DEFAULT '0' COMMENT '1:Display in admin only',   `custom_title` varchar(255) NOT NULL DEFAULT '' COMMENT 'FIELD TITLE',   `show_title` tinyint(1) NOT NULL DEFAULT '1',   `custom_tip` varchar(255) NOT NULL DEFAULT '' COMMENT 'TIP',   `custom_value` varchar(2200) DEFAULT NULL COMMENT 'DEFAULT VALUE',   `custom_desc` varchar(255) DEFAULT NULL COMMENT 'DESCRIPTION OR UNIT',   `field_type` varchar(2) NOT NULL DEFAULT '0' COMMENT 'S:STRING,I:INT,P:PARENT, B:BOOL,D:DATE,T:TIME,H:HIDDEN',   `is_list` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'list of values',   `is_hidden` tinyint(1) NOT NULL DEFAULT '0' COMMENT '1:hidden',   `is_cart_attribute` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Add attributes to cart',   `is_input` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Add input to cart',   `searchable` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Available as search filter',   `layout_pos` varchar(24) DEFAULT NULL COMMENT 'LAYOUT POSITION',   `custom_params` varchar(17000) NOT NULL DEFAULT '',   `shared` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'VALID FOR ALL VENDORS?',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_custom_id`),   KEY `custom_parent_id` (`custom_parent_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `custom_element` (`custom_element`),   KEY `field_type` (`field_type`),   KEY `is_cart_attribute` (`is_cart_attribute`),   KEY `is_input` (`is_input`),   KEY `searchable` (`searchable`),   KEY `shared` (`shared`),   KEY `published` (`published`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='custom fields definition';
";s:12:"dependencies";a:0:{}}s:25:"kisya_virtuemart_invoices";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:960:"CREATE TABLE `#__virtuemart_invoices` (   `virtuemart_invoice_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `virtuemart_order_id` int(1) unsigned DEFAULT NULL,   `invoice_number` varchar(64) DEFAULT NULL,   `order_status` char(2) DEFAULT NULL,   `xhtml` text,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_invoice_id`),   UNIQUE KEY `invoice_number` (`invoice_number`,`virtuemart_vendor_id`),   KEY `virtuemart_order_id` (`virtuemart_order_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COMMENT='custom fields definition';
";s:12:"dependencies";a:0:{}}s:36:"kisya_virtuemart_manufacturer_medias";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:458:"CREATE TABLE `#__virtuemart_manufacturer_medias` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_manufacturer_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_media_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_manufacturer_id` (`virtuemart_manufacturer_id`,`virtuemart_media_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:39:"kisya_virtuemart_manufacturercategories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:690:"CREATE TABLE `#__virtuemart_manufacturercategories` (   `virtuemart_manufacturercategories_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_manufacturercategories_id`),   KEY `published` (`published`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Manufacturers are assigned to these categories';
";s:12:"dependencies";a:0:{}}s:45:"kisya_virtuemart_manufacturercategories_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:399:"CREATE TABLE `#__virtuemart_manufacturercategories_en_gb` (   `virtuemart_manufacturercategories_id` int(1) unsigned NOT NULL,   `mf_category_name` char(180) NOT NULL DEFAULT '',   `mf_category_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_manufacturercategories_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:45:"kisya_virtuemart_manufacturercategories_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:399:"CREATE TABLE `#__virtuemart_manufacturercategories_ru_ru` (   `virtuemart_manufacturercategories_id` int(1) unsigned NOT NULL,   `mf_category_name` char(180) NOT NULL DEFAULT '',   `mf_category_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_manufacturercategories_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:30:"kisya_virtuemart_manufacturers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:991:"CREATE TABLE `#__virtuemart_manufacturers` (   `virtuemart_manufacturer_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_manufacturercategories_id` int(1) DEFAULT NULL,   `metarobot` varchar(400) DEFAULT NULL,   `metaauthor` varchar(400) DEFAULT NULL,   `hits` int(1) unsigned NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_manufacturer_id`),   UNIQUE KEY `virtuemart_manufacturercategories_id` (`virtuemart_manufacturer_id`,`virtuemart_manufacturercategories_id`),   KEY `published` (`published`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='Manufacturers are those who deliver products';
";s:12:"dependencies";a:0:{}}s:36:"kisya_virtuemart_manufacturers_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:438:"CREATE TABLE `#__virtuemart_manufacturers_en_gb` (   `virtuemart_manufacturer_id` int(1) unsigned NOT NULL,   `mf_name` char(180) NOT NULL DEFAULT '',   `mf_email` char(255) NOT NULL DEFAULT '',   `mf_desc` varchar(20000) NOT NULL DEFAULT '',   `mf_url` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_manufacturer_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:36:"kisya_virtuemart_manufacturers_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:438:"CREATE TABLE `#__virtuemart_manufacturers_ru_ru` (   `virtuemart_manufacturer_id` int(1) unsigned NOT NULL,   `mf_name` char(180) NOT NULL DEFAULT '',   `mf_email` char(255) NOT NULL DEFAULT '',   `mf_desc` varchar(20000) NOT NULL DEFAULT '',   `mf_url` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_manufacturer_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:23:"kisya_virtuemart_medias";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1513:"CREATE TABLE `#__virtuemart_medias` (   `virtuemart_media_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `file_title` varchar(126) NOT NULL DEFAULT '',   `file_description` varchar(254) NOT NULL DEFAULT '',   `file_meta` varchar(254) NOT NULL DEFAULT '',   `file_mimetype` char(64) NOT NULL DEFAULT '',   `file_type` varchar(32) NOT NULL DEFAULT '',   `file_url` varchar(900) NOT NULL DEFAULT '',   `file_url_thumb` varchar(900) NOT NULL DEFAULT '',   `file_is_product_image` tinyint(1) NOT NULL DEFAULT '0',   `file_is_downloadable` tinyint(1) NOT NULL DEFAULT '0',   `file_is_forSale` tinyint(1) NOT NULL DEFAULT '0',   `file_params` varchar(17000) NOT NULL DEFAULT '',   `file_lang` varchar(500) NOT NULL DEFAULT '',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_media_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `published` (`published`),   KEY `file_type` (`file_type`),   KEY `shared` (`shared`) ) ENGINE=MyISAM AUTO_INCREMENT=143221 DEFAULT CHARSET=utf8 COMMENT='Additional Images and Files which are assigned to products';
";s:12:"dependencies";a:0:{}}s:39:"kisya_virtuemart_migration_oldtonew_ids";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:529:"CREATE TABLE `#__virtuemart_migration_oldtonew_ids` (   `id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `cats` longblob,   `catsxref` blob,   `manus` longblob,   `mfcats` blob,   `shoppergroups` longblob,   `products` longblob,   `products_start` int(1) DEFAULT NULL,   `orderstates` blob,   `orders` longblob,   `attributes` longblob,   `relatedproducts` longblob,   `orders_start` int(1) DEFAULT NULL,   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='xref table for vm1 ids to vm2 ids';
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_modules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:605:"CREATE TABLE `#__virtuemart_modules` (   `module_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `module_name` char(255) DEFAULT NULL,   `module_description` varchar(21000) DEFAULT NULL,   `module_perms` char(255) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `is_admin` enum('0','1') NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`module_id`),   KEY `module_name` (`module_name`),   KEY `ordering` (`ordering`),   KEY `published` (`published`) ) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 COMMENT='VirtueMart Core Modules, not: Joomla modules';
";s:12:"dependencies";a:0:{}}s:33:"kisya_virtuemart_order_calc_rules";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1519:"CREATE TABLE `#__virtuemart_order_calc_rules` (   `virtuemart_order_calc_rule_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_calc_id` int(1) unsigned DEFAULT NULL,   `virtuemart_order_id` int(1) unsigned DEFAULT NULL,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `virtuemart_order_item_id` int(1) DEFAULT NULL,   `calc_rule_name` varchar(64) NOT NULL DEFAULT '' COMMENT 'NAME OF THE RULE',   `calc_kind` varchar(16) NOT NULL DEFAULT '' COMMENT 'DISCOUNT/TAX/MARGIN/COMMISSION',   `calc_mathop` varchar(16) NOT NULL DEFAULT '' COMMENT 'DISCOUNT/TAX/MARGIN/COMMISSION',   `calc_amount` decimal(15,5) NOT NULL DEFAULT '0.00000',   `calc_result` decimal(15,5) NOT NULL DEFAULT '0.00000',   `calc_value` decimal(15,5) NOT NULL DEFAULT '0.00000',   `calc_currency` int(1) DEFAULT NULL,   `calc_params` varchar(18000) NOT NULL DEFAULT '',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_order_calc_rule_id`),   KEY `virtuemart_calc_id` (`virtuemart_calc_id`),   KEY `virtuemart_order_id` (`virtuemart_order_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=MyISAM AUTO_INCREMENT=4777 DEFAULT CHARSET=utf8 COMMENT='Stores all calculation rules which are part of an order';
";s:12:"dependencies";a:0:{}}s:32:"kisya_virtuemart_order_histories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:923:"CREATE TABLE `#__virtuemart_order_histories` (   `virtuemart_order_history_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_order_id` int(1) unsigned NOT NULL DEFAULT '0',   `order_status_code` char(1) NOT NULL DEFAULT '0',   `customer_notified` tinyint(1) NOT NULL DEFAULT '0',   `comments` varchar(21000) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_order_history_id`),   KEY `virtuemart_order_id` (`virtuemart_order_id`) ) ENGINE=InnoDB AUTO_INCREMENT=4909 DEFAULT CHARSET=utf8 COMMENT='Stores all actions and changes that occur to an order';
";s:12:"dependencies";a:0:{}}s:28:"kisya_virtuemart_order_items";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1769:"CREATE TABLE `#__virtuemart_order_items` (   `virtuemart_order_item_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_order_id` int(1) unsigned DEFAULT NULL,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `virtuemart_product_id` int(1) DEFAULT NULL,   `order_item_sku` varchar(255) NOT NULL DEFAULT '',   `order_item_name` varchar(4096) NOT NULL DEFAULT '',   `product_quantity` int(1) DEFAULT NULL,   `product_item_price` decimal(15,5) DEFAULT NULL,   `product_priceWithoutTax` decimal(15,5) DEFAULT NULL,   `product_tax` decimal(15,5) DEFAULT NULL,   `product_basePriceWithTax` decimal(15,5) DEFAULT NULL,   `product_discountedPriceWithoutTax` decimal(15,5) DEFAULT NULL,   `product_final_price` decimal(15,5) NOT NULL DEFAULT '0.00000',   `product_subtotal_discount` decimal(15,5) NOT NULL DEFAULT '0.00000',   `product_subtotal_with_tax` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_item_currency` int(1) DEFAULT NULL,   `order_status` char(1) DEFAULT NULL,   `product_attribute` mediumtext,   `delivery_date` varchar(200) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_order_item_id`),   KEY `virtuemart_product_id` (`virtuemart_product_id`),   KEY `virtuemart_order_id` (`virtuemart_order_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `order_status` (`order_status`) ) ENGINE=InnoDB AUTO_INCREMENT=16080 DEFAULT CHARSET=utf8 COMMENT='Stores all items (products) which are part of an order';
";s:12:"dependencies";a:0:{}}s:32:"kisya_virtuemart_order_userinfos";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1629:"CREATE TABLE `#__virtuemart_order_userinfos` (   `virtuemart_order_userinfo_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_order_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   `address_type` char(2) DEFAULT NULL,   `address_type_name` char(32) DEFAULT NULL,   `company` char(64) DEFAULT NULL,   `title` char(32) DEFAULT NULL,   `last_name` char(32) DEFAULT NULL,   `first_name` char(32) DEFAULT NULL,   `middle_name` char(32) DEFAULT NULL,   `phone_1` char(24) DEFAULT NULL,   `phone_2` char(24) DEFAULT NULL,   `fax` char(24) DEFAULT NULL,   `address_1` char(64) NOT NULL DEFAULT '',   `address_2` char(64) DEFAULT NULL,   `city` char(32) NOT NULL DEFAULT '',   `virtuemart_state_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_country_id` varchar(255) DEFAULT NULL,   `zip` char(16) NOT NULL DEFAULT '',   `email` char(255) DEFAULT NULL,   `agreed` tinyint(4) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   `customer_note` mediumtext,   `tos` varchar(255) DEFAULT NULL,   PRIMARY KEY (`virtuemart_order_userinfo_id`),   KEY `i_virtuemart_order_id` (`virtuemart_order_id`),   KEY `i_virtuemart_user_id` (`virtuemart_user_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3060 DEFAULT CHARSET=utf8 COMMENT='Stores the BillTo and ShipTo Information at order time';
";s:12:"dependencies";a:0:{}}s:23:"kisya_virtuemart_orders";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2615:"CREATE TABLE `#__virtuemart_orders` (   `virtuemart_order_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '0',   `order_number` varchar(64) DEFAULT NULL,   `customer_number` varchar(32) DEFAULT NULL,   `order_pass` varchar(34) DEFAULT NULL,   `order_create_invoice_pass` varchar(32) DEFAULT NULL,   `order_total` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_salesPrice` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_billTaxAmount` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_billTax` varchar(400) DEFAULT NULL,   `order_billDiscountAmount` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_discountAmount` decimal(15,5) NOT NULL DEFAULT '0.00000',   `order_subtotal` decimal(15,5) DEFAULT NULL,   `order_tax` decimal(10,5) DEFAULT NULL,   `order_shipment` decimal(10,5) DEFAULT NULL,   `order_shipment_tax` decimal(10,5) DEFAULT NULL,   `order_payment` decimal(10,2) DEFAULT NULL,   `order_payment_tax` decimal(10,5) DEFAULT NULL,   `coupon_discount` decimal(12,2) NOT NULL DEFAULT '0.00',   `coupon_code` varchar(32) DEFAULT NULL,   `order_discount` decimal(12,2) NOT NULL DEFAULT '0.00',   `order_currency` smallint(1) DEFAULT NULL,   `order_status` char(1) DEFAULT NULL,   `user_currency_id` smallint(1) DEFAULT NULL,   `user_currency_rate` decimal(10,5) NOT NULL DEFAULT '1.00000',   `payment_currency_id` smallint(1) DEFAULT NULL,   `payment_currency_rate` decimal(10,5) NOT NULL DEFAULT '1.00000',   `virtuemart_paymentmethod_id` int(1) unsigned DEFAULT NULL,   `virtuemart_shipmentmethod_id` int(1) unsigned DEFAULT NULL,   `delivery_date` varchar(200) DEFAULT NULL,   `order_language` varchar(7) DEFAULT NULL,   `oc_note` varchar(20000) NOT NULL DEFAULT '' COMMENT 'old customer notes',   `ip_address` char(15) NOT NULL DEFAULT '',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_order_id`),   KEY `virtuemart_user_id` (`virtuemart_user_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `order_number` (`order_number`),   KEY `virtuemart_paymentmethod_id` (`virtuemart_paymentmethod_id`),   KEY `virtuemart_shipmentmethod_id` (`virtuemart_shipmentmethod_id`) ) ENGINE=InnoDB AUTO_INCREMENT=2389 DEFAULT CHARSET=utf8 COMMENT='Used to store all orders';
";s:12:"dependencies";a:0:{}}s:28:"kisya_virtuemart_orderstates";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1060:"CREATE TABLE `#__virtuemart_orderstates` (   `virtuemart_orderstate_id` tinyint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `order_status_code` char(1) NOT NULL DEFAULT '',   `order_status_name` varchar(64) DEFAULT NULL,   `order_status_description` varchar(20000) DEFAULT NULL,   `order_stock_handle` char(1) NOT NULL DEFAULT 'A',   `ordering` int(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_orderstate_id`),   KEY `ordering` (`ordering`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `published` (`published`) ) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 COMMENT='All available order statuses';
";s:12:"dependencies";a:0:{}}s:37:"kisya_virtuemart_payment_plg_standard";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:996:"CREATE TABLE `#__virtuemart_payment_plg_standard` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_order_id` int(1) unsigned DEFAULT NULL,   `order_number` char(64) DEFAULT NULL,   `virtuemart_paymentmethod_id` mediumint(1) unsigned DEFAULT NULL,   `payment_name` varchar(5000) DEFAULT NULL,   `payment_order_total` decimal(15,5) NOT NULL DEFAULT '0.00000',   `payment_currency` char(3) DEFAULT NULL,   `cost_per_transaction` decimal(10,2) DEFAULT NULL,   `cost_percent_total` decimal(10,2) DEFAULT NULL,   `tax_id` smallint(1) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2389 DEFAULT CHARSET=utf8 COMMENT='Payment Standard Table';
";s:12:"dependencies";a:0:{}}s:44:"kisya_virtuemart_paymentmethod_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:484:"CREATE TABLE `#__virtuemart_paymentmethod_shoppergroups` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_paymentmethod_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_shoppergroup_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_paymentmethod_id` (`virtuemart_paymentmethod_id`,`virtuemart_shoppergroup_id`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='xref table for paymentmethods to shoppergroup';
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_paymentmethods";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1269:"CREATE TABLE `#__virtuemart_paymentmethods` (   `virtuemart_paymentmethod_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `payment_jplugin_id` int(1) NOT NULL DEFAULT '0',   `payment_element` varchar(50) NOT NULL DEFAULT '',   `payment_params` varchar(19000) NOT NULL DEFAULT '',   `currency_id` int(1) unsigned DEFAULT NULL,   `slug` char(255) NOT NULL DEFAULT '',   `shared` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'valide for all vendors?',   `ordering` int(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_paymentmethod_id`),   KEY `payment_jplugin_id` (`payment_jplugin_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `payment_element` (`payment_element`,`virtuemart_vendor_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='The payment methods of your store';
";s:12:"dependencies";a:0:{}}s:37:"kisya_virtuemart_paymentmethods_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:365:"CREATE TABLE `#__virtuemart_paymentmethods_en_gb` (   `virtuemart_paymentmethod_id` int(1) unsigned NOT NULL,   `payment_name` char(180) NOT NULL DEFAULT '',   `payment_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_paymentmethod_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:37:"kisya_virtuemart_paymentmethods_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:365:"CREATE TABLE `#__virtuemart_paymentmethods_ru_ru` (   `virtuemart_paymentmethod_id` int(1) unsigned NOT NULL,   `payment_name` char(180) NOT NULL DEFAULT '',   `payment_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_paymentmethod_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:27:"kisya_virtuemart_permgroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:910:"CREATE TABLE `#__virtuemart_permgroups` (   `virtuemart_permgroup_id` tinyint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL DEFAULT '1',   `group_name` char(128) DEFAULT NULL,   `group_level` int(11) DEFAULT NULL,   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_permgroup_id`),   KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COMMENT='Holds all the user groups';
";s:12:"dependencies";a:0:{}}s:35:"kisya_virtuemart_product_categories";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:509:"CREATE TABLE `#__virtuemart_product_categories` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_category_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_product_id` (`virtuemart_product_id`,`virtuemart_category_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=1466221 DEFAULT CHARSET=utf8 COMMENT='Maps Products to Categories';
";s:12:"dependencies";a:0:{}}s:37:"kisya_virtuemart_product_customfields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1477:"CREATE TABLE `#__virtuemart_product_customfields` (   `virtuemart_customfield_id` int(1) unsigned NOT NULL AUTO_INCREMENT COMMENT 'FIELD ID',   `virtuemart_product_id` int(1) NOT NULL DEFAULT '0',   `virtuemart_custom_id` int(1) NOT NULL DEFAULT '1' COMMENT 'CUSTOM GROUP ID',   `customfield_value` varchar(2500) DEFAULT NULL COMMENT 'field value',   `customfield_price` decimal(15,6) DEFAULT NULL COMMENT 'price',   `disabler` int(1) unsigned NOT NULL DEFAULT '0',   `override` int(1) unsigned NOT NULL DEFAULT '0',   `customfield_params` varchar(17000) NOT NULL DEFAULT '' COMMENT 'PARAM FOR PLUGINS',   `product_sku` varchar(64) DEFAULT NULL,   `product_gtin` varchar(64) DEFAULT NULL,   `product_mpn` varchar(64) DEFAULT NULL,   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) unsigned NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) unsigned NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_customfield_id`),   KEY `virtuemart_product_id` (`virtuemart_product_id`),   KEY `virtuemart_custom_id` (`virtuemart_custom_id`),   KEY `published` (`published`),   KEY `ordering` (`virtuemart_product_id`,`ordering`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='custom fields';
";s:12:"dependencies";a:0:{}}s:38:"kisya_virtuemart_product_manufacturers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:426:"CREATE TABLE `#__virtuemart_product_manufacturers` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) DEFAULT NULL,   `virtuemart_manufacturer_id` int(1) unsigned DEFAULT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_product_id` (`virtuemart_product_id`,`virtuemart_manufacturer_id`) ) ENGINE=MyISAM AUTO_INCREMENT=141365 DEFAULT CHARSET=utf8 COMMENT='Maps a product to a manufacturer';
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_product_medias";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:460:"CREATE TABLE `#__virtuemart_product_medias` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_media_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_product_id` (`virtuemart_product_id`,`virtuemart_media_id`),   KEY `ordering` (`ordering`) ) ENGINE=MyISAM AUTO_INCREMENT=684683 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_product_prices";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1688:"CREATE TABLE `#__virtuemart_product_prices` (   `virtuemart_product_price_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_shoppergroup_id` int(1) unsigned NOT NULL DEFAULT '0',   `product_price` decimal(15,6) DEFAULT NULL,   `override` tinyint(1) DEFAULT NULL,   `product_override_price` decimal(15,5) DEFAULT NULL,   `product_tax_id` int(1) DEFAULT NULL,   `product_discount_id` int(1) DEFAULT NULL,   `product_currency` smallint(1) DEFAULT NULL,   `product_price_publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `product_price_publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `price_quantity_start` int(1) unsigned NOT NULL DEFAULT '0',   `price_quantity_end` int(1) unsigned NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_product_price_id`),   KEY `virtuemart_product_id` (`virtuemart_product_id`),   KEY `product_price` (`virtuemart_product_id`),   KEY `virtuemart_shoppergroup_id` (`virtuemart_shoppergroup_id`),   KEY `product_price_publish_up` (`product_price_publish_up`),   KEY `product_price_publish_down` (`product_price_publish_down`),   KEY `price_quantity_start` (`price_quantity_start`),   KEY `price_quantity_end` (`price_quantity_end`) ) ENGINE=MyISAM AUTO_INCREMENT=141663 DEFAULT CHARSET=utf8 COMMENT='Holds price records for a product';
";s:12:"dependencies";a:0:{}}s:34:"kisya_virtuemart_product_relations";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:349:"CREATE TABLE `#__virtuemart_product_relations` (   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `related_products` int(11) DEFAULT NULL,   PRIMARY KEY (`id`),   UNIQUE KEY `i_virtuemart_product_id` (`virtuemart_product_id`,`related_products`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:38:"kisya_virtuemart_product_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:441:"CREATE TABLE `#__virtuemart_product_shoppergroups` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_shoppergroup_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_product_id` (`virtuemart_product_id`,`virtuemart_shoppergroup_id`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='Maps Products to Categories';
";s:12:"dependencies";a:0:{}}s:25:"kisya_virtuemart_products";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:2319:"CREATE TABLE `#__virtuemart_products` (   `virtuemart_product_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '1',   `product_parent_id` int(1) unsigned NOT NULL DEFAULT '0',   `product_sku` varchar(255) DEFAULT NULL,   `product_gtin` varchar(64) DEFAULT NULL,   `product_mpn` varchar(64) DEFAULT NULL,   `product_weight` decimal(10,4) DEFAULT NULL,   `product_weight_uom` varchar(7) DEFAULT NULL,   `product_length` decimal(10,4) DEFAULT NULL,   `product_width` decimal(10,4) DEFAULT NULL,   `product_height` decimal(10,4) DEFAULT NULL,   `product_lwh_uom` varchar(7) DEFAULT NULL,   `product_url` varchar(255) DEFAULT NULL,   `product_in_stock` int(1) NOT NULL DEFAULT '0',   `product_ordered` int(1) NOT NULL DEFAULT '0',   `low_stock_notification` int(1) unsigned NOT NULL DEFAULT '0',   `product_available_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `product_availability` varchar(32) DEFAULT NULL,   `product_special` tinyint(1) DEFAULT NULL,   `product_sales` int(1) unsigned NOT NULL DEFAULT '0',   `product_unit` varchar(8) DEFAULT NULL,   `product_packaging` decimal(8,4) unsigned DEFAULT NULL,   `product_params` text NOT NULL,   `hits` int(1) unsigned DEFAULT NULL,   `intnotes` text,   `metarobot` varchar(400) DEFAULT NULL,   `metaauthor` varchar(400) DEFAULT NULL,   `layout` varchar(16) DEFAULT NULL,   `published` tinyint(1) DEFAULT NULL,   `pordering` int(1) unsigned NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(1) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(1) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(1) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_product_id`),   KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `product_parent_id` (`product_parent_id`),   KEY `product_special` (`product_special`),   KEY `product_in_stock` (`product_in_stock`),   KEY `product_ordered` (`product_ordered`),   KEY `published` (`published`),   KEY `pordering` (`pordering`),   KEY `created_on` (`created_on`),   KEY `modified_on` (`modified_on`) ) ENGINE=MyISAM AUTO_INCREMENT=138142 DEFAULT CHARSET=utf8 COMMENT='All products are stored here.';
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_products_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:541:"CREATE TABLE `#__virtuemart_products_en_gb` (   `virtuemart_product_id` int(1) unsigned NOT NULL,   `product_s_desc` varchar(2000) NOT NULL DEFAULT '',   `product_desc` varchar(18400) NOT NULL DEFAULT '',   `product_name` char(180) NOT NULL DEFAULT '',   `metadesc` varchar(400) NOT NULL DEFAULT '',   `metakey` varchar(400) NOT NULL DEFAULT '',   `customtitle` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_product_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_products_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:541:"CREATE TABLE `#__virtuemart_products_ru_ru` (   `virtuemart_product_id` int(1) unsigned NOT NULL,   `product_s_desc` varchar(2000) NOT NULL DEFAULT '',   `product_desc` varchar(18400) NOT NULL DEFAULT '',   `product_name` char(180) NOT NULL DEFAULT '',   `metadesc` varchar(400) NOT NULL DEFAULT '',   `metakey` varchar(400) NOT NULL DEFAULT '',   `customtitle` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_product_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:31:"kisya_virtuemart_rating_reviews";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1095:"CREATE TABLE `#__virtuemart_rating_reviews` (   `virtuemart_rating_review_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `comment` varchar(18000) DEFAULT NULL,   `review_ok` tinyint(1) NOT NULL DEFAULT '0',   `review_rates` int(1) unsigned NOT NULL DEFAULT '0',   `review_ratingcount` int(1) unsigned NOT NULL DEFAULT '0',   `review_rating` decimal(10,2) NOT NULL DEFAULT '0.00',   `review_editable` tinyint(1) NOT NULL DEFAULT '1',   `lastip` char(50) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_rating_review_id`),   UNIQUE KEY `i_virtuemart_product_id` (`virtuemart_product_id`,`created_by`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"kisya_virtuemart_rating_votes";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:703:"CREATE TABLE `#__virtuemart_rating_votes` (   `virtuemart_rating_vote_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `vote` int(11) NOT NULL DEFAULT '0',   `lastip` char(50) NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_rating_vote_id`),   UNIQUE KEY `i_virtuemart_product_id` (`virtuemart_product_id`,`created_by`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='Stores all ratings for a product';
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_ratings";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:807:"CREATE TABLE `#__virtuemart_ratings` (   `virtuemart_rating_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `rates` int(11) NOT NULL DEFAULT '0',   `ratingcount` int(1) unsigned NOT NULL DEFAULT '0',   `rating` decimal(10,1) NOT NULL DEFAULT '0.0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_rating_id`),   UNIQUE KEY `i_virtuemart_product_id` (`virtuemart_product_id`,`virtuemart_rating_id`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='Stores all ratings for a product';
";s:12:"dependencies";a:0:{}}s:46:"kisya_virtuemart_shipment_plg_weight_countries";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:995:"CREATE TABLE `#__virtuemart_shipment_plg_weight_countries` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_order_id` int(11) unsigned DEFAULT NULL,   `order_number` char(32) DEFAULT NULL,   `virtuemart_shipmentmethod_id` mediumint(1) unsigned DEFAULT NULL,   `shipment_name` varchar(5000) DEFAULT NULL,   `order_weight` decimal(10,4) DEFAULT NULL,   `shipment_weight_unit` char(3) DEFAULT 'KG',   `shipment_cost` decimal(10,2) DEFAULT NULL,   `shipment_package_fee` decimal(10,2) DEFAULT NULL,   `tax_id` smallint(1) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`) ) ENGINE=MyISAM AUTO_INCREMENT=2389 DEFAULT CHARSET=utf8 COMMENT='Shipment Weight Countries Table';
";s:12:"dependencies";a:0:{}}s:45:"kisya_virtuemart_shipmentmethod_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:488:"CREATE TABLE `#__virtuemart_shipmentmethod_shoppergroups` (   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_shipmentmethod_id` mediumint(1) unsigned DEFAULT NULL,   `virtuemart_shoppergroup_id` smallint(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `i_virtuemart_shipmentmethod_id` (`virtuemart_shipmentmethod_id`,`virtuemart_shoppergroup_id`) ) ENGINE=MyISAM AUTO_INCREMENT=29 DEFAULT CHARSET=utf8 COMMENT='xref table for shipment to shoppergroup';
";s:12:"dependencies";a:0:{}}s:32:"kisya_virtuemart_shipmentmethods";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1179:"CREATE TABLE `#__virtuemart_shipmentmethods` (   `virtuemart_shipmentmethod_id` mediumint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(11) NOT NULL DEFAULT '1',   `shipment_jplugin_id` int(11) NOT NULL DEFAULT '0',   `slug` char(255) NOT NULL DEFAULT '',   `shipment_element` char(50) NOT NULL DEFAULT '',   `shipment_params` varchar(19000) DEFAULT NULL,   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_shipmentmethod_id`),   KEY `idx_shipment_jplugin_id` (`shipment_jplugin_id`),   KEY `idx_shipment_method_ordering` (`ordering`),   KEY `idx_shipment_element` (`shipment_element`,`virtuemart_vendor_id`) ) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 COMMENT='Shipment created from the shipment plugins';
";s:12:"dependencies";a:0:{}}s:38:"kisya_virtuemart_shipmentmethods_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:370:"CREATE TABLE `#__virtuemart_shipmentmethods_en_gb` (   `virtuemart_shipmentmethod_id` int(1) unsigned NOT NULL,   `shipment_name` char(180) NOT NULL DEFAULT '',   `shipment_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_shipmentmethod_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:38:"kisya_virtuemart_shipmentmethods_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:370:"CREATE TABLE `#__virtuemart_shipmentmethods_ru_ru` (   `virtuemart_shipmentmethod_id` int(1) unsigned NOT NULL,   `shipment_name` char(180) NOT NULL DEFAULT '',   `shipment_desc` varchar(20000) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_shipmentmethod_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:30:"kisya_virtuemart_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1141:"CREATE TABLE `#__virtuemart_shoppergroups` (   `virtuemart_shoppergroup_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(11) NOT NULL DEFAULT '1',   `shopper_group_name` char(32) DEFAULT NULL,   `shopper_group_desc` char(128) DEFAULT NULL,   `custom_price_display` tinyint(1) NOT NULL DEFAULT '0',   `price_display` blob,   `default` tinyint(1) NOT NULL DEFAULT '0',   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_shoppergroup_id`),   KEY `idx_shopper_group_virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `idx_shopper_group_name` (`shopper_group_name`) ) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='Shopper Groups that users can be assigned to';
";s:12:"dependencies";a:0:{}}s:23:"kisya_virtuemart_states";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1299:"CREATE TABLE `#__virtuemart_states` (   `virtuemart_state_id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL DEFAULT '1',   `virtuemart_country_id` smallint(1) unsigned NOT NULL DEFAULT '1',   `virtuemart_worldzone_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `state_name` char(64) DEFAULT NULL,   `state_3_code` char(3) DEFAULT NULL,   `state_2_code` char(2) DEFAULT NULL,   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_state_id`),   UNIQUE KEY `idx_state_3_code` (`virtuemart_country_id`,`state_3_code`),   UNIQUE KEY `idx_state_2_code` (`virtuemart_country_id`,`state_2_code`),   KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`),   KEY `i_virtuemart_country_id` (`virtuemart_country_id`) ) ENGINE=MyISAM AUTO_INCREMENT=730 DEFAULT CHARSET=utf8 COMMENT='States that are assigned to a country';
";s:12:"dependencies";a:0:{}}s:33:"kisya_virtuemart_userfield_values";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:866:"CREATE TABLE `#__virtuemart_userfield_values` (   `virtuemart_userfield_value_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_userfield_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `fieldtitle` char(255) NOT NULL DEFAULT '',   `fieldvalue` char(255) NOT NULL DEFAULT '',   `sys` tinyint(4) NOT NULL DEFAULT '0',   `ordering` int(2) NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_userfield_value_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='Holds the different values for dropdown and radio lists';
";s:12:"dependencies";a:0:{}}s:27:"kisya_virtuemart_userfields";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1657:"CREATE TABLE `#__virtuemart_userfields` (   `virtuemart_userfield_id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL DEFAULT '1',   `userfield_jplugin_id` int(11) NOT NULL DEFAULT '0',   `name` char(50) NOT NULL DEFAULT '',   `title` char(255) NOT NULL DEFAULT '',   `description` mediumtext,   `type` char(50) NOT NULL DEFAULT '',   `maxlength` int(11) DEFAULT NULL,   `size` int(11) DEFAULT NULL,   `required` tinyint(4) NOT NULL DEFAULT '0',   `cols` int(11) DEFAULT NULL,   `rows` int(11) DEFAULT NULL,   `value` char(50) DEFAULT NULL,   `default` char(255) DEFAULT NULL,   `registration` tinyint(1) NOT NULL DEFAULT '0',   `shipment` tinyint(1) NOT NULL DEFAULT '0',   `account` tinyint(1) NOT NULL DEFAULT '1',   `readonly` tinyint(1) NOT NULL DEFAULT '0',   `calculated` tinyint(1) NOT NULL DEFAULT '0',   `sys` tinyint(4) NOT NULL DEFAULT '0',   `userfield_params` varchar(17500) NOT NULL DEFAULT '' COMMENT 'userfield params',   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_userfield_id`),   KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=MyISAM AUTO_INCREMENT=27 DEFAULT CHARSET=utf8 COMMENT='Holds the fields for the user information';
";s:12:"dependencies";a:0:{}}s:26:"kisya_virtuemart_userinfos";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1536:"CREATE TABLE `#__virtuemart_userinfos` (   `virtuemart_userinfo_id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   `address_type` char(2) NOT NULL DEFAULT '',   `address_type_name` char(32) NOT NULL DEFAULT '',   `name` char(64) DEFAULT NULL,   `company` char(64) DEFAULT NULL,   `title` char(32) DEFAULT NULL,   `last_name` char(32) DEFAULT NULL,   `first_name` char(32) DEFAULT NULL,   `middle_name` char(32) DEFAULT NULL,   `phone_1` char(24) DEFAULT NULL,   `phone_2` char(24) DEFAULT NULL,   `fax` char(24) DEFAULT NULL,   `address_1` char(64) NOT NULL DEFAULT '',   `address_2` char(64) DEFAULT NULL,   `city` char(32) NOT NULL DEFAULT '',   `virtuemart_state_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_country_id` varchar(255) DEFAULT NULL,   `zip` char(32) NOT NULL DEFAULT '',   `agreed` tinyint(4) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   `customer_note` mediumtext,   `tos` varchar(255) DEFAULT NULL,   PRIMARY KEY (`virtuemart_userinfo_id`),   KEY `idx_userinfo_virtuemart_user_id` (`virtuemart_userinfo_id`,`virtuemart_user_id`) ) ENGINE=MyISAM AUTO_INCREMENT=998 DEFAULT CHARSET=utf8 COMMENT='Customer Information, BT = BillTo and ST = ShipTo';
";s:12:"dependencies";a:0:{}}s:30:"kisya_virtuemart_vendor_medias";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:415:"CREATE TABLE `#__virtuemart_vendor_medias` (   `id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_media_id` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(2) NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`,`virtuemart_media_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:29:"kisya_virtuemart_vendor_users";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:358:"CREATE TABLE `#__virtuemart_vendor_users` (   `id` int(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `virtuemart_vendor_id` (`virtuemart_vendor_id`,`virtuemart_user_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_vendors";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:820:"CREATE TABLE `#__virtuemart_vendors` (   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `vendor_name` char(64) DEFAULT NULL,   `vendor_currency` int(11) DEFAULT NULL,   `vendor_accepted_currencies` varchar(1536) NOT NULL DEFAULT '',   `vendor_params` varchar(17000) DEFAULT NULL,   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_vendor_id`),   KEY `idx_vendor_name` (`vendor_name`) ) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='Vendors manage their products in your store';
";s:12:"dependencies";a:0:{}}s:30:"kisya_virtuemart_vendors_en_gb";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:506:"CREATE TABLE `#__virtuemart_vendors_en_gb` (   `virtuemart_vendor_id` int(1) unsigned NOT NULL,   `vendor_store_desc` text NOT NULL,   `vendor_terms_of_service` text NOT NULL,   `vendor_legal_info` text NOT NULL,   `vendor_store_name` char(180) NOT NULL DEFAULT '',   `vendor_phone` char(26) NOT NULL DEFAULT '',   `vendor_url` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_vendor_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:30:"kisya_virtuemart_vendors_ru_ru";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:506:"CREATE TABLE `#__virtuemart_vendors_ru_ru` (   `virtuemart_vendor_id` int(1) unsigned NOT NULL,   `vendor_store_desc` text NOT NULL,   `vendor_terms_of_service` text NOT NULL,   `vendor_legal_info` text NOT NULL,   `vendor_store_name` char(180) NOT NULL DEFAULT '',   `vendor_phone` char(26) NOT NULL DEFAULT '',   `vendor_url` char(255) NOT NULL DEFAULT '',   `slug` char(192) NOT NULL DEFAULT '',   PRIMARY KEY (`virtuemart_vendor_id`),   UNIQUE KEY `slug` (`slug`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}s:37:"kisya_virtuemart_vmuser_shoppergroups";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:449:"CREATE TABLE `#__virtuemart_vmuser_shoppergroups` (   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_shoppergroup_id` smallint(1) unsigned NOT NULL DEFAULT '0',   PRIMARY KEY (`id`),   UNIQUE KEY `i_virtuemart_user_id` (`virtuemart_user_id`,`virtuemart_shoppergroup_id`) ) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='xref table for users to shopper group';
";s:12:"dependencies";a:0:{}}s:24:"kisya_virtuemart_vmusers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1094:"CREATE TABLE `#__virtuemart_vmusers` (   `virtuemart_user_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) unsigned NOT NULL DEFAULT '0',   `user_is_vendor` tinyint(1) NOT NULL DEFAULT '0',   `customer_number` char(32) DEFAULT NULL,   `perms` char(40) NOT NULL DEFAULT 'shopper',   `virtuemart_paymentmethod_id` mediumint(1) unsigned DEFAULT NULL,   `virtuemart_shipmentmethod_id` mediumint(1) unsigned DEFAULT NULL,   `agreed` tinyint(1) NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_user_id`),   UNIQUE KEY `i_virtuemart_user_id` (`virtuemart_user_id`,`virtuemart_vendor_id`),   KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=MyISAM AUTO_INCREMENT=4145 DEFAULT CHARSET=utf8 COMMENT='Holds the unique user data';
";s:12:"dependencies";a:0:{}}s:29:"kisya_virtuemart_waitingusers";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1043:"CREATE TABLE `#__virtuemart_waitingusers` (   `virtuemart_waitinguser_id` int(11) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_product_id` int(1) unsigned NOT NULL DEFAULT '0',   `virtuemart_user_id` int(1) unsigned NOT NULL DEFAULT '0',   `notify_email` char(150) NOT NULL DEFAULT '',   `notified` tinyint(1) NOT NULL DEFAULT '0',   `notify_date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,   `ordering` int(2) NOT NULL DEFAULT '0',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_waitinguser_id`),   KEY `virtuemart_product_id` (`virtuemart_product_id`),   KEY `notify_email` (`notify_email`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stores notifications, users waiting f. products out of stock';
";s:12:"dependencies";a:0:{}}s:27:"kisya_virtuemart_worldzones";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1049:"CREATE TABLE `#__virtuemart_worldzones` (   `virtuemart_worldzone_id` smallint(1) unsigned NOT NULL AUTO_INCREMENT,   `virtuemart_vendor_id` smallint(1) DEFAULT NULL,   `zone_name` char(255) DEFAULT NULL,   `zone_cost` decimal(10,2) DEFAULT NULL,   `zone_limit` decimal(10,2) DEFAULT NULL,   `zone_description` varchar(18000) DEFAULT NULL,   `zone_tax_rate` int(1) unsigned NOT NULL DEFAULT '0',   `ordering` int(2) NOT NULL DEFAULT '0',   `shared` tinyint(1) NOT NULL DEFAULT '0',   `published` tinyint(1) NOT NULL DEFAULT '1',   `created_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(11) NOT NULL DEFAULT '0',   `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(11) NOT NULL DEFAULT '0',   `locked_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `locked_by` int(11) NOT NULL DEFAULT '0',   PRIMARY KEY (`virtuemart_worldzone_id`),   KEY `i_virtuemart_vendor_id` (`virtuemart_vendor_id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='The Zones managed by the Zone Shipment Module';
";s:12:"dependencies";a:0:{}}s:14:"kisya_weblinks";a:4:{s:4:"type";s:5:"table";s:12:"dump_records";b:1;s:6:"create";s:1780:"CREATE TABLE `#__weblinks` (   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,   `catid` int(11) NOT NULL DEFAULT '0',   `title` varchar(250) NOT NULL DEFAULT '',   `alias` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',   `url` varchar(250) NOT NULL DEFAULT '',   `description` text NOT NULL,   `hits` int(11) NOT NULL DEFAULT '0',   `state` tinyint(1) NOT NULL DEFAULT '0',   `checked_out` int(11) NOT NULL DEFAULT '0',   `checked_out_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `ordering` int(11) NOT NULL DEFAULT '0',   `access` int(11) NOT NULL DEFAULT '1',   `params` text NOT NULL,   `language` char(7) NOT NULL DEFAULT '',   `created` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `created_by` int(10) unsigned NOT NULL DEFAULT '0',   `created_by_alias` varchar(255) NOT NULL DEFAULT '',   `modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `modified_by` int(10) unsigned NOT NULL DEFAULT '0',   `metakey` text NOT NULL,   `metadesc` text NOT NULL,   `metadata` text NOT NULL,   `featured` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT 'Set if link is featured.',   `xreference` varchar(50) NOT NULL COMMENT 'A reference to enable linkages to external data sets.',   `publish_up` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `publish_down` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',   `version` int(10) unsigned NOT NULL DEFAULT '1',   `images` text NOT NULL,   PRIMARY KEY (`id`),   KEY `idx_access` (`access`),   KEY `idx_checkout` (`checked_out`),   KEY `idx_state` (`state`),   KEY `idx_catid` (`catid`),   KEY `idx_createdby` (`created_by`),   KEY `idx_featured_catid` (`featured`,`catid`),   KEY `idx_language` (`language`),   KEY `idx_xreference` (`xreference`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
";s:12:"dependencies";a:0:{}}}s:17:" * table_name_map";a:185:{s:23:"kisya_acymailing_action";s:20:"#__acymailing_action";s:23:"kisya_acymailing_config";s:20:"#__acymailing_config";s:23:"kisya_acymailing_fields";s:20:"#__acymailing_fields";s:23:"kisya_acymailing_filter";s:20:"#__acymailing_filter";s:24:"kisya_acymailing_forward";s:21:"#__acymailing_forward";s:28:"kisya_acymailing_geolocation";s:25:"#__acymailing_geolocation";s:24:"kisya_acymailing_history";s:21:"#__acymailing_history";s:21:"kisya_acymailing_list";s:18:"#__acymailing_list";s:29:"kisya_acymailing_listcampaign";s:26:"#__acymailing_listcampaign";s:25:"kisya_acymailing_listmail";s:22:"#__acymailing_listmail";s:24:"kisya_acymailing_listsub";s:21:"#__acymailing_listsub";s:21:"kisya_acymailing_mail";s:18:"#__acymailing_mail";s:22:"kisya_acymailing_queue";s:19:"#__acymailing_queue";s:22:"kisya_acymailing_rules";s:19:"#__acymailing_rules";s:22:"kisya_acymailing_stats";s:19:"#__acymailing_stats";s:27:"kisya_acymailing_subscriber";s:24:"#__acymailing_subscriber";s:20:"kisya_acymailing_tag";s:17:"#__acymailing_tag";s:24:"kisya_acymailing_tagmail";s:21:"#__acymailing_tagmail";s:25:"kisya_acymailing_template";s:22:"#__acymailing_template";s:20:"kisya_acymailing_url";s:17:"#__acymailing_url";s:25:"kisya_acymailing_urlclick";s:22:"#__acymailing_urlclick";s:26:"kisya_acymailing_userstats";s:23:"#__acymailing_userstats";s:17:"kisya_ak_profiles";s:14:"#__ak_profiles";s:14:"kisya_ak_stats";s:11:"#__ak_stats";s:16:"kisya_ak_storage";s:13:"#__ak_storage";s:19:"kisya_akeeba_common";s:16:"#__akeeba_common";s:12:"kisya_assets";s:9:"#__assets";s:18:"kisya_associations";s:15:"#__associations";s:20:"kisya_banner_clients";s:17:"#__banner_clients";s:19:"kisya_banner_tracks";s:16:"#__banner_tracks";s:13:"kisya_banners";s:10:"#__banners";s:16:"kisya_categories";s:13:"#__categories";s:21:"kisya_contact_details";s:18:"#__contact_details";s:15:"kisya_contactus";s:12:"#__contactus";s:13:"kisya_content";s:10:"#__content";s:23:"kisya_content_frontpage";s:20:"#__content_frontpage";s:20:"kisya_content_rating";s:17:"#__content_rating";s:19:"kisya_content_types";s:16:"#__content_types";s:25:"kisya_contentitem_tag_map";s:22:"#__contentitem_tag_map";s:23:"kisya_core_log_searches";s:20:"#__core_log_searches";s:27:"kisya_csvi_available_fields";s:24:"#__csvi_available_fields";s:19:"kisya_csvi_currency";s:16:"#__csvi_currency";s:23:"kisya_csvi_icecat_index";s:20:"#__csvi_icecat_index";s:27:"kisya_csvi_icecat_suppliers";s:24:"#__csvi_icecat_suppliers";s:22:"kisya_csvi_log_details";s:19:"#__csvi_log_details";s:15:"kisya_csvi_logs";s:12:"#__csvi_logs";s:27:"kisya_csvi_related_products";s:24:"#__csvi_related_products";s:23:"kisya_csvi_replacements";s:20:"#__csvi_replacements";s:19:"kisya_csvi_settings";s:16:"#__csvi_settings";s:28:"kisya_csvi_template_settings";s:25:"#__csvi_template_settings";s:26:"kisya_csvi_template_tables";s:23:"#__csvi_template_tables";s:25:"kisya_csvi_template_types";s:22:"#__csvi_template_types";s:19:"kisya_djimageslider";s:16:"#__djimageslider";s:16:"kisya_extensions";s:13:"#__extensions";s:20:"kisya_finder_filters";s:17:"#__finder_filters";s:18:"kisya_finder_links";s:15:"#__finder_links";s:25:"kisya_finder_links_terms0";s:22:"#__finder_links_terms0";s:25:"kisya_finder_links_terms1";s:22:"#__finder_links_terms1";s:25:"kisya_finder_links_terms2";s:22:"#__finder_links_terms2";s:25:"kisya_finder_links_terms3";s:22:"#__finder_links_terms3";s:25:"kisya_finder_links_terms4";s:22:"#__finder_links_terms4";s:25:"kisya_finder_links_terms5";s:22:"#__finder_links_terms5";s:25:"kisya_finder_links_terms6";s:22:"#__finder_links_terms6";s:25:"kisya_finder_links_terms7";s:22:"#__finder_links_terms7";s:25:"kisya_finder_links_terms8";s:22:"#__finder_links_terms8";s:25:"kisya_finder_links_terms9";s:22:"#__finder_links_terms9";s:25:"kisya_finder_links_termsa";s:22:"#__finder_links_termsa";s:25:"kisya_finder_links_termsb";s:22:"#__finder_links_termsb";s:25:"kisya_finder_links_termsc";s:22:"#__finder_links_termsc";s:25:"kisya_finder_links_termsd";s:22:"#__finder_links_termsd";s:25:"kisya_finder_links_termse";s:22:"#__finder_links_termse";s:25:"kisya_finder_links_termsf";s:22:"#__finder_links_termsf";s:21:"kisya_finder_taxonomy";s:18:"#__finder_taxonomy";s:25:"kisya_finder_taxonomy_map";s:22:"#__finder_taxonomy_map";s:18:"kisya_finder_terms";s:15:"#__finder_terms";s:25:"kisya_finder_terms_common";s:22:"#__finder_terms_common";s:19:"kisya_finder_tokens";s:16:"#__finder_tokens";s:29:"kisya_finder_tokens_aggregate";s:26:"#__finder_tokens_aggregate";s:18:"kisya_finder_types";s:15:"#__finder_types";s:14:"kisya_jaem_log";s:11:"#__jaem_log";s:19:"kisya_jaem_services";s:16:"#__jaem_services";s:10:"kisya_jumi";s:7:"#__jumi";s:15:"kisya_languages";s:12:"#__languages";s:10:"kisya_menu";s:7:"#__menu";s:16:"kisya_menu_types";s:13:"#__menu_types";s:14:"kisya_messages";s:11:"#__messages";s:18:"kisya_messages_cfg";s:15:"#__messages_cfg";s:13:"kisya_modules";s:10:"#__modules";s:18:"kisya_modules_menu";s:15:"#__modules_menu";s:15:"kisya_newsfeeds";s:12:"#__newsfeeds";s:15:"kisya_overrider";s:12:"#__overrider";s:26:"kisya_postinstall_messages";s:23:"#__postinstall_messages";s:20:"kisya_redirect_links";s:17:"#__redirect_links";s:13:"kisya_schemas";s:10:"#__schemas";s:13:"kisya_session";s:10:"#__session";s:10:"kisya_tags";s:7:"#__tags";s:21:"kisya_template_styles";s:18:"#__template_styles";s:14:"kisya_ucm_base";s:11:"#__ucm_base";s:17:"kisya_ucm_content";s:14:"#__ucm_content";s:17:"kisya_ucm_history";s:14:"#__ucm_history";s:18:"kisya_update_sites";s:15:"#__update_sites";s:29:"kisya_update_sites_extensions";s:26:"#__update_sites_extensions";s:13:"kisya_updates";s:10:"#__updates";s:15:"kisya_user_keys";s:12:"#__user_keys";s:16:"kisya_user_notes";s:13:"#__user_notes";s:19:"kisya_user_profiles";s:16:"#__user_profiles";s:24:"kisya_user_usergroup_map";s:21:"#__user_usergroup_map";s:16:"kisya_usergroups";s:13:"#__usergroups";s:11:"kisya_users";s:8:"#__users";s:21:"kisya_utf8_conversion";s:18:"#__utf8_conversion";s:16:"kisya_viewlevels";s:13:"#__viewlevels";s:33:"kisya_virtuemart_adminmenuentries";s:30:"#__virtuemart_adminmenuentries";s:32:"kisya_virtuemart_calc_categories";s:29:"#__virtuemart_calc_categories";s:31:"kisya_virtuemart_calc_countries";s:28:"#__virtuemart_calc_countries";s:35:"kisya_virtuemart_calc_manufacturers";s:32:"#__virtuemart_calc_manufacturers";s:35:"kisya_virtuemart_calc_shoppergroups";s:32:"#__virtuemart_calc_shoppergroups";s:28:"kisya_virtuemart_calc_states";s:25:"#__virtuemart_calc_states";s:22:"kisya_virtuemart_calcs";s:19:"#__virtuemart_calcs";s:22:"kisya_virtuemart_carts";s:19:"#__virtuemart_carts";s:27:"kisya_virtuemart_categories";s:24:"#__virtuemart_categories";s:33:"kisya_virtuemart_categories_en_gb";s:30:"#__virtuemart_categories_en_gb";s:33:"kisya_virtuemart_categories_ru_ru";s:30:"#__virtuemart_categories_ru_ru";s:36:"kisya_virtuemart_category_categories";s:33:"#__virtuemart_category_categories";s:32:"kisya_virtuemart_category_medias";s:29:"#__virtuemart_category_medias";s:24:"kisya_virtuemart_configs";s:21:"#__virtuemart_configs";s:26:"kisya_virtuemart_countries";s:23:"#__virtuemart_countries";s:24:"kisya_virtuemart_coupons";s:21:"#__virtuemart_coupons";s:27:"kisya_virtuemart_currencies";s:24:"#__virtuemart_currencies";s:24:"kisya_virtuemart_customs";s:21:"#__virtuemart_customs";s:25:"kisya_virtuemart_invoices";s:22:"#__virtuemart_invoices";s:36:"kisya_virtuemart_manufacturer_medias";s:33:"#__virtuemart_manufacturer_medias";s:39:"kisya_virtuemart_manufacturercategories";s:36:"#__virtuemart_manufacturercategories";s:45:"kisya_virtuemart_manufacturercategories_en_gb";s:42:"#__virtuemart_manufacturercategories_en_gb";s:45:"kisya_virtuemart_manufacturercategories_ru_ru";s:42:"#__virtuemart_manufacturercategories_ru_ru";s:30:"kisya_virtuemart_manufacturers";s:27:"#__virtuemart_manufacturers";s:36:"kisya_virtuemart_manufacturers_en_gb";s:33:"#__virtuemart_manufacturers_en_gb";s:36:"kisya_virtuemart_manufacturers_ru_ru";s:33:"#__virtuemart_manufacturers_ru_ru";s:23:"kisya_virtuemart_medias";s:20:"#__virtuemart_medias";s:39:"kisya_virtuemart_migration_oldtonew_ids";s:36:"#__virtuemart_migration_oldtonew_ids";s:24:"kisya_virtuemart_modules";s:21:"#__virtuemart_modules";s:33:"kisya_virtuemart_order_calc_rules";s:30:"#__virtuemart_order_calc_rules";s:32:"kisya_virtuemart_order_histories";s:29:"#__virtuemart_order_histories";s:28:"kisya_virtuemart_order_items";s:25:"#__virtuemart_order_items";s:32:"kisya_virtuemart_order_userinfos";s:29:"#__virtuemart_order_userinfos";s:23:"kisya_virtuemart_orders";s:20:"#__virtuemart_orders";s:28:"kisya_virtuemart_orderstates";s:25:"#__virtuemart_orderstates";s:37:"kisya_virtuemart_payment_plg_standard";s:34:"#__virtuemart_payment_plg_standard";s:44:"kisya_virtuemart_paymentmethod_shoppergroups";s:41:"#__virtuemart_paymentmethod_shoppergroups";s:31:"kisya_virtuemart_paymentmethods";s:28:"#__virtuemart_paymentmethods";s:37:"kisya_virtuemart_paymentmethods_en_gb";s:34:"#__virtuemart_paymentmethods_en_gb";s:37:"kisya_virtuemart_paymentmethods_ru_ru";s:34:"#__virtuemart_paymentmethods_ru_ru";s:27:"kisya_virtuemart_permgroups";s:24:"#__virtuemart_permgroups";s:35:"kisya_virtuemart_product_categories";s:32:"#__virtuemart_product_categories";s:37:"kisya_virtuemart_product_customfields";s:34:"#__virtuemart_product_customfields";s:38:"kisya_virtuemart_product_manufacturers";s:35:"#__virtuemart_product_manufacturers";s:31:"kisya_virtuemart_product_medias";s:28:"#__virtuemart_product_medias";s:31:"kisya_virtuemart_product_prices";s:28:"#__virtuemart_product_prices";s:34:"kisya_virtuemart_product_relations";s:31:"#__virtuemart_product_relations";s:38:"kisya_virtuemart_product_shoppergroups";s:35:"#__virtuemart_product_shoppergroups";s:25:"kisya_virtuemart_products";s:22:"#__virtuemart_products";s:31:"kisya_virtuemart_products_en_gb";s:28:"#__virtuemart_products_en_gb";s:31:"kisya_virtuemart_products_ru_ru";s:28:"#__virtuemart_products_ru_ru";s:31:"kisya_virtuemart_rating_reviews";s:28:"#__virtuemart_rating_reviews";s:29:"kisya_virtuemart_rating_votes";s:26:"#__virtuemart_rating_votes";s:24:"kisya_virtuemart_ratings";s:21:"#__virtuemart_ratings";s:46:"kisya_virtuemart_shipment_plg_weight_countries";s:43:"#__virtuemart_shipment_plg_weight_countries";s:45:"kisya_virtuemart_shipmentmethod_shoppergroups";s:42:"#__virtuemart_shipmentmethod_shoppergroups";s:32:"kisya_virtuemart_shipmentmethods";s:29:"#__virtuemart_shipmentmethods";s:38:"kisya_virtuemart_shipmentmethods_en_gb";s:35:"#__virtuemart_shipmentmethods_en_gb";s:38:"kisya_virtuemart_shipmentmethods_ru_ru";s:35:"#__virtuemart_shipmentmethods_ru_ru";s:30:"kisya_virtuemart_shoppergroups";s:27:"#__virtuemart_shoppergroups";s:23:"kisya_virtuemart_states";s:20:"#__virtuemart_states";s:33:"kisya_virtuemart_userfield_values";s:30:"#__virtuemart_userfield_values";s:27:"kisya_virtuemart_userfields";s:24:"#__virtuemart_userfields";s:26:"kisya_virtuemart_userinfos";s:23:"#__virtuemart_userinfos";s:30:"kisya_virtuemart_vendor_medias";s:27:"#__virtuemart_vendor_medias";s:29:"kisya_virtuemart_vendor_users";s:26:"#__virtuemart_vendor_users";s:24:"kisya_virtuemart_vendors";s:21:"#__virtuemart_vendors";s:30:"kisya_virtuemart_vendors_en_gb";s:27:"#__virtuemart_vendors_en_gb";s:30:"kisya_virtuemart_vendors_ru_ru";s:27:"#__virtuemart_vendors_ru_ru";s:37:"kisya_virtuemart_vmuser_shoppergroups";s:34:"#__virtuemart_vmuser_shoppergroups";s:24:"kisya_virtuemart_vmusers";s:21:"#__virtuemart_vmusers";s:29:"kisya_virtuemart_waitingusers";s:26:"#__virtuemart_waitingusers";s:27:"kisya_virtuemart_worldzones";s:24:"#__virtuemart_worldzones";s:14:"kisya_weblinks";s:11:"#__weblinks";}s:15:" * dependencies";a:0:{}s:12:" * nextTable";s:0:"";s:12:" * nextRange";i:0;s:11:" * maxRange";s:1:"0";s:18:" * extendedInserts";b:1;s:13:" * packetSize";s:6:"131072";s:8:" * query";s:0:"";s:11:" * partSize";s:6:"524288";s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:10:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";s:4:"pass";s:8:"database";s:4:"kiss";s:6:"prefix";s:6:"kisya_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;}s:15:" * databaseRoot";s:8:"[SITEDB]";s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:-1;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:10:{s:4:"host";s:9:"localhost";s:4:"port";s:0:"";s:8:"username";s:4:"root";s:8:"password";s:4:"pass";s:8:"database";s:4:"kiss";s:6:"prefix";s:6:"kisya_";s:8:"dumpFile";s:8:"site.sql";s:6:"driver";s:28:"\Akeeba\Engine\Driver\Joomla";s:4:"root";s:8:"[SITEDB]";s:20:"process_empty_prefix";b:1;}s:15:" * databaseRoot";s:8:"[SITEDB]";s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;s:10:"partNumber";i:455;}s:31:"\Akeeba\Engine\Core\Domain\Pack";O:30:"Akeeba\Engine\Core\Domain\Pack":35:{s:46:" Akeeba\Engine\Core\Domain\Pack directory_list";a:0:{}s:41:" Akeeba\Engine\Core\Domain\Pack file_list";a:0:{}s:52:" Akeeba\Engine\Core\Domain\Pack done_subdir_scanning";b:0;s:50:" Akeeba\Engine\Core\Domain\Pack done_file_scanning";b:0;s:43:" Akeeba\Engine\Core\Domain\Pack path_prefix";s:0:"";s:50:" Akeeba\Engine\Core\Domain\Pack remove_path_prefix";s:15:"/var/www/kiseya";s:48:" Akeeba\Engine\Core\Domain\Pack root_definitions";a:0:{}s:55:" Akeeba\Engine\Core\Domain\Pack processed_files_counter";i:2;s:49:" Akeeba\Engine\Core\Domain\Pack current_directory";s:60:"/var/www/kiseya/modules/mod_djimageslider/themes/default/css";s:49:" Akeeba\Engine\Core\Domain\Pack getFiles_position";N;s:51:" Akeeba\Engine\Core\Domain\Pack getFolders_position";N;s:36:" Akeeba\Engine\Core\Domain\Pack root";s:10:"[SITEROOT]";s:43:" Akeeba\Engine\Core\Domain\Pack total_roots";i:1;s:43:" Akeeba\Engine\Core\Domain\Pack total_files";i:23421;s:42:" Akeeba\Engine\Core\Domain\Pack done_files";i:23427;s:45:" Akeeba\Engine\Core\Domain\Pack total_folders";i:3615;s:44:" Akeeba\Engine\Core\Domain\Pack done_folders";i:3617;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:0;s:13:" * isFinished";b:1;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:60:"/var/www/kiseya/modules/mod_djimageslider/themes/default/css";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:25:"\Akeeba\Engine\Scan\Smart";O:24:"Akeeba\Engine\Scan\Smart":4:{s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}s:39:"\Akeeba\Engine\Core\Domain\Finalization";O:38:"Akeeba\Engine\Core\Domain\Finalization":28:{s:52:" Akeeba\Engine\Core\Domain\Finalization action_queue";a:9:{i:0;s:17:"update_statistics";i:1;s:17:"remove_temp_files";i:2;s:12:"test_extract";i:3;s:19:"run_post_processing";i:4;s:25:"kickstart_post_processing";i:5;s:12:"apply_quotas";i:6;s:19:"apply_remote_quotas";i:7;s:19:"mail_administrators";i:8;s:17:"update_statistics";}s:55:" Akeeba\Engine\Core\Domain\Finalization action_handlers";a:1:{i:0;r:124;}s:54:" Akeeba\Engine\Core\Domain\Finalization current_method";s:16:"update_filesizes";s:52:" Akeeba\Engine\Core\Domain\Finalization backup_parts";a:0:{}s:58:" Akeeba\Engine\Core\Domain\Finalization backup_parts_index";i:-1;s:61:" Akeeba\Engine\Core\Domain\Finalization remote_files_killlist";N;s:51:" Akeeba\Engine\Core\Domain\Finalization steps_total";i:10;s:50:" Akeeba\Engine\Core\Domain\Finalization steps_done";i:0;s:54:" Akeeba\Engine\Core\Domain\Finalization substeps_total";i:0;s:53:" Akeeba\Engine\Core\Domain\Finalization substeps_done";i:0;s:13:" * isPrepared";b:1;s:12:" * isRunning";b:1;s:13:" * isFinished";b:0;s:9:" * hasRan";b:0;s:16:" * active_domain";s:0:"";s:14:" * active_step";s:0:"";s:17:" * active_substep";s:0:"";s:19:" * _parametersArray";a:4:{s:11:"description";s:32:"Backup taken on 21.02.2017 10:56";s:7:"comment";s:0:"";s:6:"jpskey";s:0:"";s:8:"angiekey";s:0:"";}s:15:" * databaseRoot";a:0:{}s:41:" Akeeba\Engine\Base\Part warnings_pointer";i:0;s:15:" * nest_logging";b:0;s:20:" * installerSettings";O:8:"stdClass":8:{s:4:"name";s:23:"ANGIE for Joomla! Sites";s:7:"package";s:26:"angie.jpa,angie-joomla.jpa";s:13:"installerroot";s:12:"installation";s:7:"sqlroot";s:16:"installation/sql";s:12:"databasesini";s:1:"1";s:6:"readme";s:1:"1";s:9:"extrainfo";s:1:"1";s:8:"password";s:1:"1";}s:15:" * waitTimeMsec";i:0;s:29:" * ignoreMinimumExecutionTime";b:0;s:34:" Akeeba\Engine\Base\Object _errors";a:0:{}s:21:" * _errors_queue_size";i:0;s:36:" Akeeba\Engine\Base\Object _warnings";a:0:{}s:23:" * _warnings_queue_size";i:0;}}}